/**
 * An implementation of the Advance Encryption Standard Key Wrapping Algorithm (AES-KW)
 * originally designed by NIST and formalized in RFC 3394
 * @see https://tools.ietf.org/html/rfc3394
 * @see http://csrc.nist.gov/encryption/kms/key-wrap.pdf
 */
export declare class AESKW {
    private _inputBuffer;
    private _outputBuffer;
    private _cipher;
    private _iv;
    /**
     * Constructs AESKW instance with the given key.
     *
     * @param key: The key encryption key used to wrap and un-wrap
     */
    constructor(key: Uint8Array);
    /**
     * Cleans the buffers and underlying memory associated to the cipher.
     */
    clean(): this;
    /**
     * Wraps supplied key data with the key encryption key supplied in the constructor.
     *
     * @param keyData: The key data to wrap with the key encryption key
     */
    wrapKey(keyData: Uint8Array): Uint8Array;
    /**
     * Un-wraps a wrapped key using the key encryption key supplied in the
     * constructor
     * @param wrappedKey: The wrapped key to un-wrap with the key encryption key
     */
    unwrapKey(wrappedKey: Uint8Array): Uint8Array;
}
