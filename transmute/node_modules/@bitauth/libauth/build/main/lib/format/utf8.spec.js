"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/* eslint-disable functional/no-expression-statement */
const ava_1 = __importDefault(require("ava"));
const ava_fast_check_1 = require("ava-fast-check");
const fc = __importStar(require("fast-check"));
const lib_1 = require("../lib");
const maxUint8Number = 255;
const fcUint8Array = (minLength, maxLength) => fc
    .array(fc.integer(0, maxUint8Number), minLength, maxLength)
    .map((a) => Uint8Array.from(a));
ava_1.default('utf8ToBin', (t) => {
    t.deepEqual(lib_1.utf8ToBin('üëç'), lib_1.hexToBin('f09f918d'));
});
ava_1.default('binToUtf8', (t) => {
    t.deepEqual(lib_1.binToUtf8(lib_1.hexToBin('f09f918d')), 'üëç');
});
const testBinLength = 100;
ava_fast_check_1.testProp('[fast-check] utf8ToBin <-> binToUtf8', [fcUint8Array(0, testBinLength)], (t, input) => t.deepEqual(lib_1.binToUtf8(lib_1.utf8ToBin(lib_1.binToUtf8(input))), lib_1.binToUtf8(input)));
//# sourceMappingURL=utf8.spec.js.map