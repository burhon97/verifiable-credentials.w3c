"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/* eslint-disable functional/no-expression-statement, @typescript-eslint/no-magic-numbers */
const ava_1 = __importDefault(require("ava"));
const ava_fast_check_1 = require("ava-fast-check");
const lib_1 = require("../lib");
ava_1.default('dateToLocktime', (t) => {
    t.deepEqual(lib_1.dateToLocktime(new Date('2019-10-13')), 1570924800);
    t.deepEqual(lib_1.dateToLocktime(new Date('2107-01-01')), lib_1.LocktimeError.dateOutOfRange);
});
ava_1.default('dateToLocktimeBin', (t) => {
    t.deepEqual(lib_1.dateToLocktimeBin(new Date('2019-10-13')), lib_1.hexToBin('0069a25d'));
    t.deepEqual(lib_1.dateToLocktimeBin(new Date('2107-01-01')), lib_1.LocktimeError.dateOutOfRange);
});
ava_1.default('parseLockTime', (t) => {
    t.deepEqual(lib_1.parseLocktimeBin(lib_1.hexToBin('0069a25d')), new Date('2019-10-13'));
    t.deepEqual(lib_1.parseLocktimeBin(lib_1.hexToBin('d090371c')), 473403600);
    t.deepEqual(lib_1.parseLocktimeBin(lib_1.hexToBin('')), lib_1.LocktimeError.incorrectLength);
    t.deepEqual(lib_1.parseLocktimeBin(lib_1.hexToBin('00')), lib_1.LocktimeError.incorrectLength);
    t.deepEqual(lib_1.parseLocktimeBin(lib_1.hexToBin('0000000000')), lib_1.LocktimeError.incorrectLength);
});
ava_fast_check_1.testProp('[fast-check] dateToLocktime <-> locktimeToDate', [ava_fast_check_1.fc.integer(lib_1.minimumLocktimeTimestamp, lib_1.maximumLocktimeTimestamp)], (t, timestamp) => t.deepEqual(lib_1.dateToLocktime(lib_1.locktimeToDate(timestamp)), timestamp));
ava_fast_check_1.testProp('[fast-check] dateToLocktimeBin <-> parseLocktimeBin', [ava_fast_check_1.fc.date({ max: lib_1.maximumLocktimeDate, min: lib_1.minimumLocktimeDate })], (t, date) => {
    const withSecondResolution = new Date(Math.round(date.getTime() / 1000) * 1000);
    t.deepEqual(lib_1.parseLocktimeBin(lib_1.dateToLocktimeBin(withSecondResolution)).getTime(), withSecondResolution.getTime());
});
//# sourceMappingURL=time.spec.js.map