"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/* eslint-disable functional/no-expression-statement */
const ava_1 = __importDefault(require("ava"));
const lib_1 = require("../../lib");
ava_1.default('authenticationTemplateP2pkh is valid', (t) => {
    const template = lib_1.validateAuthenticationTemplate(lib_1.authenticationTemplateP2pkhNonHd);
    t.true(typeof template !== 'string');
});
ava_1.default('authenticationTemplateP2pkh is mostly equivalent to authenticationTemplateP2pkhHd', (t) => {
    t.deepEqual(lib_1.authenticationTemplateP2pkhNonHd.$schema, lib_1.authenticationTemplateP2pkh.$schema);
    t.deepEqual(lib_1.authenticationTemplateP2pkhNonHd.scripts, lib_1.authenticationTemplateP2pkh.scripts);
    t.deepEqual(lib_1.authenticationTemplateP2pkhNonHd.supported, lib_1.authenticationTemplateP2pkh.supported);
    t.deepEqual(lib_1.authenticationTemplateP2pkhNonHd.version, lib_1.authenticationTemplateP2pkh.version);
});
ava_1.default('authenticationTemplateP2pkhHd is valid', (t) => {
    const template = lib_1.validateAuthenticationTemplate(lib_1.authenticationTemplateP2pkh);
    t.true(typeof template !== 'string');
});
//# sourceMappingURL=p2pkh.spec.js.map