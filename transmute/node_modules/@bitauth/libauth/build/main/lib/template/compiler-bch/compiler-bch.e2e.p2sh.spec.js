"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/* eslint-disable functional/no-expression-statement */
const ava_1 = __importDefault(require("ava"));
const lib_1 = require("../../lib");
const compiler_bch_e2e_spec_helper_1 = require("./compiler-bch.e2e.spec.helper");
ava_1.default('[BCH compiler] transformation – unlocking script – standard locking type', compiler_bch_e2e_spec_helper_1.expectCompilationResult, '', {}, {
    bytecode: lib_1.hexToBin('51'),
    success: true,
}, {}, {
    lockingScriptTypes: {
        lock: 'standard',
    },
    scripts: {
        lock: 'OP_DROP OP_1',
        test: 'OP_1',
    },
    unlockingScripts: {
        test: 'lock',
    },
});
ava_1.default('[BCH compiler] transformation – unlocking script – p2sh locking type', compiler_bch_e2e_spec_helper_1.expectCompilationResult, '', {}, {
    bytecode: lib_1.hexToBin('51027551'),
    success: true,
}, {}, {
    lockingScriptTypes: {
        lock: 'p2sh',
    },
    scripts: {
        lock: 'OP_DROP OP_1',
        test: 'OP_1',
    },
    unlockingScripts: {
        test: 'lock',
    },
});
ava_1.default('[BCH compiler] transformation – locking script – standard locking type', compiler_bch_e2e_spec_helper_1.expectCompilationResult, '', {}, {
    bytecode: lib_1.hexToBin('7551'),
    success: true,
}, {}, {
    lockingScriptTypes: {
        test: 'standard',
    },
    scripts: {
        test: 'OP_DROP OP_1',
        unlock: 'OP_1',
    },
    unlockingScripts: {
        unlock: 'test',
    },
});
ava_1.default('[BCH compiler] transformation – locking script – p2sh locking type', compiler_bch_e2e_spec_helper_1.expectCompilationResult, '', {}, {
    bytecode: lib_1.hexToBin('a914ca2bb4a2729927a38a0f266dc890d2bb5990769e87'),
    success: true,
}, {}, {
    lockingScriptTypes: {
        test: 'p2sh',
    },
    scripts: {
        test: 'OP_DROP OP_1',
        unlock: 'OP_1',
    },
    unlockingScripts: {
        unlock: 'test',
    },
});
ava_1.default('[BCH compiler] transformation – unlocking script – p2sh locking type - failed locking bytecode compilation', compiler_bch_e2e_spec_helper_1.expectCompilationResult, '', {}, {
    errorType: 'resolve',
    errors: [
        {
            error: 'Unknown identifier "unknown".',
            range: {
                endColumn: 21,
                endLineNumber: 1,
                startColumn: 14,
                startLineNumber: 1,
            },
        },
    ],
    success: false,
}, {}, {
    lockingScriptTypes: {
        lock: 'p2sh',
    },
    scripts: {
        lock: 'OP_DROP OP_1 unknown',
        test: 'OP_1',
    },
    unlockingScripts: {
        test: 'lock',
    },
});
ava_1.default('[BCH compiler] transformation – locking script – p2sh locking type - failed raw compilation', compiler_bch_e2e_spec_helper_1.expectCompilationResult, 'unknown', {}, {
    errorType: 'resolve',
    errors: [
        {
            error: 'Unknown identifier "unknown".',
            range: {
                endColumn: 8,
                endLineNumber: 1,
                startColumn: 1,
                startLineNumber: 1,
            },
        },
    ],
    success: false,
}, {}, {
    lockingScriptTypes: {
        test: 'p2sh',
    },
});
ava_1.default('[BCH compiler] transformation – locking script – p2sh locking type - failed hash160 (bad vm)', compiler_bch_e2e_spec_helper_1.expectCompilationResult, '', {}, {
    errorType: 'reduce',
    errors: [
        {
            error: 'Both a VM and a createState method are required to reduce evaluations.',
            range: {
                endColumn: 44,
                endLineNumber: 1,
                startColumn: 13,
                startLineNumber: 1,
            },
        },
    ],
    success: false,
}, {}, {
    lockingScriptTypes: {
        test: 'p2sh',
    },
    scripts: {
        test: 'OP_DROP OP_1',
        unlock: 'OP_1',
    },
    unlockingScripts: {
        unlock: 'test',
    },
    vm: undefined,
});
//# sourceMappingURL=compiler-bch.e2e.p2sh.spec.js.map