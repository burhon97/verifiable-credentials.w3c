"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/* eslint-disable functional/no-expression-statement, @typescript-eslint/no-magic-numbers */
const ava_1 = __importDefault(require("ava"));
const lib_1 = require("../../lib");
const compiler_bch_e2e_spec_helper_1 = require("./compiler-bch.e2e.spec.helper");
ava_1.default('[BCH compiler] variables – AddressData', compiler_bch_e2e_spec_helper_1.expectCompilationResult, '<data>', {
    bytecode: {
        data: Uint8Array.from([0xab, 0xcd]),
    },
}, { bytecode: lib_1.hexToBin('02abcd'), success: true }, {
    data: {
        description: 'the description',
        name: 'Data',
        type: 'AddressData',
    },
});
ava_1.default('[BCH compiler] variables – multiple AddressData', compiler_bch_e2e_spec_helper_1.expectCompilationResult, '<one> <two>', {
    bytecode: {
        one: Uint8Array.from([0xab, 0xcd]),
        two: Uint8Array.from([0xef, 0xab]),
    },
}, { bytecode: lib_1.hexToBin('02abcd02efab'), success: true }, {
    one: {
        description: 'no name',
        type: 'AddressData',
    },
    two: {
        name: 'no description',
        type: 'AddressData',
    },
});
ava_1.default('[BCH compiler] variables – missing AddressData', compiler_bch_e2e_spec_helper_1.expectCompilationResult, '<one> <two>', {}, {
    errorType: 'resolve',
    errors: [
        {
            error: 'Cannot resolve "one" – the "bytecode" property was not provided in the compilation data.',
            range: {
                endColumn: 5,
                endLineNumber: 1,
                startColumn: 2,
                startLineNumber: 1,
            },
        },
        {
            error: 'Cannot resolve "two" – the "bytecode" property was not provided in the compilation data.',
            range: {
                endColumn: 11,
                endLineNumber: 1,
                startColumn: 8,
                startLineNumber: 1,
            },
        },
    ],
    success: false,
}, {
    one: { type: 'AddressData' },
    two: { type: 'AddressData' },
});
ava_1.default('[BCH compiler] variables – incomplete bytecode', compiler_bch_e2e_spec_helper_1.expectCompilationResult, '<one> <two>', {
    bytecode: {},
}, {
    errorType: 'resolve',
    errors: [
        {
            error: 'Identifier "one" refers to an AddressData, but "one" was not provided in the CompilationData "bytecode".',
            missingIdentifier: 'one',
            owningEntity: 'ownerEntityOne',
            range: {
                endColumn: 5,
                endLineNumber: 1,
                startColumn: 2,
                startLineNumber: 1,
            },
        },
        {
            error: 'Identifier "two" refers to an AddressData, but "two" was not provided in the CompilationData "bytecode".',
            missingIdentifier: 'two',
            owningEntity: 'ownerEntityTwo',
            range: {
                endColumn: 11,
                endLineNumber: 1,
                startColumn: 8,
                startLineNumber: 1,
            },
        },
    ],
    success: false,
}, {
    one: { type: 'AddressData' },
    two: { type: 'AddressData' },
});
ava_1.default('[BCH compiler] variables – WalletData', compiler_bch_e2e_spec_helper_1.expectCompilationResult, '<data>', {
    bytecode: {
        data: Uint8Array.from([0xab, 0xcd]),
    },
}, { bytecode: lib_1.hexToBin('02abcd'), success: true }, {
    data: {
        description: 'the description',
        name: 'Data',
        type: 'WalletData',
    },
});
ava_1.default('[BCH compiler] variables – multiple WalletData', compiler_bch_e2e_spec_helper_1.expectCompilationResult, '<one> <two>', {
    bytecode: {
        one: Uint8Array.from([0xab, 0xcd]),
        two: Uint8Array.from([0xef, 0xab]),
    },
}, { bytecode: lib_1.hexToBin('02abcd02efab'), success: true }, {
    one: {
        description: 'no name',
        type: 'WalletData',
    },
    two: {
        name: 'no description',
        type: 'WalletData',
    },
});
ava_1.default('[BCH compiler] variables – missing WalletData', compiler_bch_e2e_spec_helper_1.expectCompilationResult, '<one> <two>', {}, {
    errorType: 'resolve',
    errors: [
        {
            error: 'Cannot resolve "one" – the "bytecode" property was not provided in the compilation data.',
            range: {
                endColumn: 5,
                endLineNumber: 1,
                startColumn: 2,
                startLineNumber: 1,
            },
        },
        {
            error: 'Cannot resolve "two" – the "bytecode" property was not provided in the compilation data.',
            range: {
                endColumn: 11,
                endLineNumber: 1,
                startColumn: 8,
                startLineNumber: 1,
            },
        },
    ],
    success: false,
}, {
    one: { type: 'WalletData' },
    two: { type: 'WalletData' },
});
ava_1.default('[BCH compiler] variables – incomplete WalletData', compiler_bch_e2e_spec_helper_1.expectCompilationResult, '<one> <two>', {
    bytecode: {},
}, {
    errorType: 'resolve',
    errors: [
        {
            error: 'Identifier "one" refers to a WalletData, but "one" was not provided in the CompilationData "bytecode".',
            missingIdentifier: 'one',
            owningEntity: 'ownerEntityOne',
            range: {
                endColumn: 5,
                endLineNumber: 1,
                startColumn: 2,
                startLineNumber: 1,
            },
        },
        {
            error: 'Identifier "two" refers to a WalletData, but "two" was not provided in the CompilationData "bytecode".',
            missingIdentifier: 'two',
            owningEntity: 'ownerEntityTwo',
            range: {
                endColumn: 11,
                endLineNumber: 1,
                startColumn: 8,
                startLineNumber: 1,
            },
        },
    ],
    success: false,
}, {
    one: { type: 'WalletData' },
    two: { type: 'WalletData' },
});
ava_1.default('[BCH compiler] variables – missing operation: currentBlockHeight', compiler_bch_e2e_spec_helper_1.expectCompilationResult, '<current_block_height>', {}, {
    errorType: 'resolve',
    errors: [
        {
            error: 'The "current_block_height" variable type can not be resolved because the "currentBlockHeight" operation has not been included in this compiler\'s CompilationEnvironment.',
            range: {
                endColumn: 22,
                endLineNumber: 1,
                startColumn: 2,
                startLineNumber: 1,
            },
        },
    ],
    success: false,
}, {}, { operations: undefined });
ava_1.default('[BCH compiler] variables – missing operation: currentBlockTime', compiler_bch_e2e_spec_helper_1.expectCompilationResult, '<current_block_time>', {}, {
    errorType: 'resolve',
    errors: [
        {
            error: 'The "current_block_time" variable type can not be resolved because the "currentBlockTime" operation has not been included in this compiler\'s CompilationEnvironment.',
            range: {
                endColumn: 20,
                endLineNumber: 1,
                startColumn: 2,
                startLineNumber: 1,
            },
        },
    ],
    success: false,
}, {}, { operations: undefined });
ava_1.default('[BCH compiler] variables – missing operation: signingSerialization', compiler_bch_e2e_spec_helper_1.expectCompilationResult, '<signing_serialization.version>', {}, {
    errorType: 'resolve',
    errors: [
        {
            error: 'The "signing_serialization" variable type can not be resolved because the "signingSerialization" operation has not been included in this compiler\'s CompilationEnvironment.',
            range: {
                endColumn: 31,
                endLineNumber: 1,
                startColumn: 2,
                startLineNumber: 1,
            },
        },
    ],
    success: false,
}, {}, { operations: undefined });
ava_1.default('[BCH compiler] variables – missing operation: addressData', compiler_bch_e2e_spec_helper_1.expectCompilationResult, '<a>', {}, {
    errorType: 'resolve',
    errors: [
        {
            error: 'The "a" variable type can not be resolved because the "addressData" operation has not been included in this compiler\'s CompilationEnvironment.',
            range: {
                endColumn: 3,
                endLineNumber: 1,
                startColumn: 2,
                startLineNumber: 1,
            },
        },
    ],
    success: false,
}, {
    a: { type: 'AddressData' },
}, { operations: undefined });
ava_1.default('[BCH compiler] variables – missing operation: hdKey', compiler_bch_e2e_spec_helper_1.expectCompilationResult, '<a>', {}, {
    errorType: 'resolve',
    errors: [
        {
            error: 'The "a" variable type can not be resolved because the "hdKey" operation has not been included in this compiler\'s CompilationEnvironment.',
            range: {
                endColumn: 3,
                endLineNumber: 1,
                startColumn: 2,
                startLineNumber: 1,
            },
        },
    ],
    success: false,
}, {
    a: { type: 'HdKey' },
}, { operations: undefined });
ava_1.default('[BCH compiler] variables – missing operation: key', compiler_bch_e2e_spec_helper_1.expectCompilationResult, '<a>', {}, {
    errorType: 'resolve',
    errors: [
        {
            error: 'The "a" variable type can not be resolved because the "key" operation has not been included in this compiler\'s CompilationEnvironment.',
            range: {
                endColumn: 3,
                endLineNumber: 1,
                startColumn: 2,
                startLineNumber: 1,
            },
        },
    ],
    success: false,
}, {
    a: { type: 'Key' },
}, { operations: undefined });
ava_1.default('[BCH compiler] variables – missing operation: walletData', compiler_bch_e2e_spec_helper_1.expectCompilationResult, '<a>', {}, {
    errorType: 'resolve',
    errors: [
        {
            error: 'The "a" variable type can not be resolved because the "walletData" operation has not been included in this compiler\'s CompilationEnvironment.',
            range: {
                endColumn: 3,
                endLineNumber: 1,
                startColumn: 2,
                startLineNumber: 1,
            },
        },
    ],
    success: false,
}, {
    a: { type: 'WalletData' },
}, { operations: undefined });
//# sourceMappingURL=compiler-bch.e2e.variables.spec.js.map