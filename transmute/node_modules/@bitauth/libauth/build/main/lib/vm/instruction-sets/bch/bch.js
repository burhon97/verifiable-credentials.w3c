"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.instantiateVirtualMachineBCH = void 0;
const crypto_1 = require("../../../crypto/crypto");
const virtual_machine_1 = require("../../virtual-machine");
const bch_instruction_sets_1 = require("./bch-instruction-sets");
__exportStar(require("./bch-descriptions"), exports);
__exportStar(require("./bch-errors"), exports);
__exportStar(require("./bch-instruction-sets"), exports);
__exportStar(require("./bch-opcodes"), exports);
__exportStar(require("./bch-operations"), exports);
__exportStar(require("./bch-types"), exports);
__exportStar(require("./fixtures/bitcoin-abc/bitcoin-abc-utils"), exports);
/**
 * Initialize a virtual machine using the provided BCH instruction set.
 *
 * @param instructionSet - the VM version to instantiate â€“ by default, the
 * current "strict" VM is used (`instructionSetBCHCurrentStrict`)
 */
exports.instantiateVirtualMachineBCH = async (instructionSet = bch_instruction_sets_1.instructionSetBCHCurrentStrict) => {
    const [sha1, sha256, ripemd160, secp256k1] = await Promise.all([
        crypto_1.instantiateSha1(),
        crypto_1.instantiateSha256(),
        crypto_1.instantiateRipemd160(),
        crypto_1.instantiateSecp256k1(),
    ]);
    return virtual_machine_1.createAuthenticationVirtualMachine(bch_instruction_sets_1.createInstructionSetBCH({
        flags: bch_instruction_sets_1.getFlagsForInstructionSetBCH(instructionSet),
        ripemd160,
        secp256k1,
        sha1,
        sha256,
    }));
};
//# sourceMappingURL=bch.js.map