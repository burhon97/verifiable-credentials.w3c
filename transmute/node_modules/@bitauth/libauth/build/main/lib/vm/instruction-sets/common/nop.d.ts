import { AuthenticationProgramStateError } from '../../vm-types';
import { AuthenticationErrorCommon } from './errors';
import { OpcodesCommon } from './opcodes';
export declare const opNop: <State>(flags: {
    disallowUpgradableNops: boolean;
}) => (state: State) => State;
export declare const nonOperations: <State>(flags: {
    disallowUpgradableNops: boolean;
}) => {
    97: (state: State) => State;
    176: (state: State) => State;
    179: (state: State) => State;
    180: (state: State) => State;
    181: (state: State) => State;
    182: (state: State) => State;
    183: (state: State) => State;
    184: (state: State) => State;
    185: (state: State) => State;
};
/**
 * "Disabled" operations are explicitly forbidden from occurring anywhere in a
 * script, even within an unexecuted branch.
 */
export declare const disabledOperation: <State extends AuthenticationProgramStateError<Errors, AuthenticationErrorCommon>, Errors>() => (state: State) => State;
export declare const disabledOperations: <State extends AuthenticationProgramStateError<Errors, AuthenticationErrorCommon>, Errors>() => {
    126: (state: State) => State;
    127: (state: State) => State;
    128: (state: State) => State;
    129: (state: State) => State;
    131: (state: State) => State;
    132: (state: State) => State;
    133: (state: State) => State;
    134: (state: State) => State;
    141: (state: State) => State;
    142: (state: State) => State;
    149: (state: State) => State;
    150: (state: State) => State;
    151: (state: State) => State;
    152: (state: State) => State;
    153: (state: State) => State;
};
//# sourceMappingURL=nop.d.ts.map