import { TransformStream } from './util';
import { DecryptTransformer } from './DecryptTransformer';
import { EncryptTransformer } from './EncryptTransformer';
export declare class Cipher {
    createEncryptStream({ recipients, publicKeyResolver, chunkSize }: any): Promise<TransformStream<any, any>>;
    createDecryptStream({ keyAgreementKey }: any): Promise<TransformStream<any, any>>;
    encrypt({ data, recipients, publicKeyResolver }: any): Promise<any>;
    encryptObject({ obj, ...rest }: any): Promise<any>;
    decrypt({ jwe, keyAgreementKey }: any): Promise<Uint8Array>;
    decryptObject({ jwe, keyAgreementKey }: any): Promise<any>;
    createEncryptTransformer({ recipients, publicKeyResolver, chunkSize, }: any): Promise<EncryptTransformer>;
    createDecryptTransformer({ keyAgreementKey }: any): Promise<DecryptTransformer>;
}
