{"version":3,"file":"web-crypto-key-pair.cjs.production.min.js","sources":["../node_modules/regenerator-runtime/runtime.js","../src/crypto.ts","../src/key/generate.ts","../src/encoding/base-x.ts","../src/encoding/base58.ts","../src/encoding/base64url.ts","../src/compression/ec-compression.ts","../src/compression/constants.ts","../src/key/identifiers.ts","../src/key/getCryptoKeyFromJsonWebKey2020.ts","../src/key/getCryptoKeyPairFromJsonWebKey2020.ts","../src/key/getCryptoKeyPairFromMultiKey2021.ts","../src/signatures/getSignatureOptionsFromCryptoKey.ts","../src/signatures/getSigner.ts","../src/signatures/getVerifier.ts","../src/signatures/jws.ts","../src/derive-bits/deriveBits.ts","../src/exportAs.ts","../src/WebCryptoKey.ts"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","import { Crypto } from '@peculiar/webcrypto';\n\nconst crypto = new Crypto();\n\nexport const subtle: SubtleCrypto =\n  typeof window !== 'undefined' && typeof jest === 'undefined'\n    ? window.crypto.subtle\n    : crypto.subtle;\n","import { subtle } from '../crypto';\nimport { JsonWebKey2020 } from '../types';\n\nconst allowedMap: any = {\n  'EC P-256': { name: 'ECDSA', namedCurve: 'P-256' },\n  'EC P-384': { name: 'ECDSA', namedCurve: 'P-384' },\n  'EC P-521': { name: 'ECDSA', namedCurve: 'P-521' },\n  'RSASSA-PKCS1-v1_5 2048': {\n    name: 'RSASSA-PKCS1-v1_5',\n    modulusLength: 2048,\n    hash: 'SHA-256',\n    publicExponent: new Uint8Array([1, 0, 1]),\n  },\n};\n\nexport const getJwkFromCryptoKey = async (cryptoKey: CryptoKey) => {\n  let jwk = await subtle.exportKey('jwk', cryptoKey);\n  delete jwk.ext;\n  delete jwk.key_ops;\n  return {\n    kty: jwk.kty,\n    crv: jwk.crv,\n    ...jwk,\n  };\n};\n\nexport const getCleanJwksFromCryptoKeyPair = async ({\n  publicKey,\n  privateKey,\n}: {\n  publicKey: CryptoKey;\n  privateKey: CryptoKey;\n}) => {\n  return {\n    publicKeyJwk: await getJwkFromCryptoKey(publicKey),\n    privateKeyJwk: await getJwkFromCryptoKey(privateKey),\n  };\n};\n\nconst generateKey = async (\n  options: any\n): Promise<{ publicKeyJwk: any; privateKeyJwk: any }> => {\n  const k: any = await subtle.generateKey(options, true, ['sign', 'verify']);\n  return getCleanJwksFromCryptoKeyPair(k);\n};\n\nexport const generate = async (opts: {\n  kty: string;\n  crvOrSize: string;\n}): Promise<JsonWebKey2020> => {\n  try {\n    let options = allowedMap[`${opts.kty} ${opts.crvOrSize}`];\n    const kp = await generateKey(options);\n    return {\n      id: '',\n      type: 'JsonWebKey2020',\n      controller: '',\n      ...kp,\n    };\n  } catch (e) {\n    console.warn(e);\n    throw new Error(`Unsupport generate options: ${JSON.stringify(opts)}`);\n  }\n};\n","// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\n\nexport function base(ALPHABET) {\n  if (ALPHABET.length >= 255) {\n    throw new TypeError('Alphabet too long');\n  }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) {\n      throw new TypeError(x + ' is ambiguous');\n    }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256); // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE); // log(256) / log(BASE), rounded up\n  function encode(source: any) {\n    if (Array.isArray(source) || source instanceof Uint8Array) {\n      source = Buffer.from(source);\n    }\n    if (!Buffer.isBuffer(source)) {\n      throw new TypeError('Expected Buffer');\n    }\n    if (source.length === 0) {\n      return '';\n    }\n    // Skip & count leading zeroes.\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n    // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0;\n    var b58 = new Uint8Array(size);\n    // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n      // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0;\n      for (\n        var it1 = size - 1;\n        (carry !== 0 || i < length) && it1 !== -1;\n        it1--, i++\n      ) {\n        carry += (256 * b58[it1]) >>> 0;\n        b58[it1] = carry % BASE >>> 0;\n        carry = (carry / BASE) >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      pbegin++;\n    }\n    // Skip leading zeroes in base58 result.\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n    // Translate the result into a string.\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) {\n      str += ALPHABET.charAt(b58[it2]);\n    }\n    return str;\n  }\n  function decodeUnsafe(source: any) {\n    if (typeof source !== 'string') {\n      throw new TypeError('Expected String');\n    }\n    if (source.length === 0) {\n      return Buffer.alloc(0);\n    }\n    var psz = 0;\n    // Skip leading spaces.\n    if (source[psz] === ' ') {\n      return;\n    }\n    // Skip and count leading '1's.\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n    // Allocate enough space in big-endian base256 representation.\n    var size = ((source.length - psz) * FACTOR + 1) >>> 0; // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size);\n    // Process the characters.\n    while (source[psz]) {\n      // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n      // Invalid character\n      if (carry === 255) {\n        return;\n      }\n      var i = 0;\n      for (\n        var it3 = size - 1;\n        (carry !== 0 || i < length) && it3 !== -1;\n        it3--, i++\n      ) {\n        carry += (BASE * b256[it3]) >>> 0;\n        b256[it3] = carry % 256 >>> 0;\n        carry = (carry / 256) >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      psz++;\n    }\n    // Skip trailing spaces.\n    if (source[psz] === ' ') {\n      return;\n    }\n    // Skip leading zeroes in b256.\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = Buffer.allocUnsafe(zeroes + (size - it4));\n    vch.fill(0x00, 0, zeroes);\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch;\n  }\n  function decode(string: string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) {\n      return buffer;\n    }\n    throw new Error('Non-base' + BASE + ' character');\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode,\n  };\n}\n","import { base } from './base-x';\n\nconst ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\n\nexport const base58 = base(ALPHABET);\n","export const base64 = {\n  encode: (unencoded: any) => {\n    return Buffer.from(unencoded || '').toString('base64');\n  },\n  decode: (encoded: any) => {\n    return Buffer.from(encoded || '', 'base64').toString('utf8');\n  },\n};\n\nexport const base64url = {\n  encode: (unencoded: any) => {\n    var encoded = base64.encode(unencoded);\n    return encoded\n      .replace(/\\+/g, '-')\n      .replace(/\\//g, '_')\n      .replace(/=+$/g, '');\n  },\n  decode: (encoded: any) => {\n    encoded = encoded.replace(/-/g, '+').replace(/_/g, '/');\n    while (encoded.length % 4) encoded += '=';\n    return base64.decode(encoded);\n  },\n};\n","import bigInt from 'big-integer';\nimport { getConstantsForCurve } from './constants';\n// see https://stackoverflow.com/questions/17171542/algorithm-for-elliptic-curve-point-compression\n// https://github.com/w3c-ccg/did-method-key/pull/36\n/**\n * Point compress elliptic curve key\n * @param {Uint8Array} x component\n * @param {Uint8Array} y component\n * @return {Uint8Array} Compressed representation\n */\nfunction compressECPoint(x: any, y: any) {\n  const out = new Uint8Array(x.length + 1);\n  out[0] = 2 + (y[y.length - 1] & 1);\n  out.set(x, 1);\n  return out;\n}\n\nfunction pad_with_zeroes(number: any, length: any) {\n  var retval = '' + number;\n  while (retval.length < length) {\n    retval = '0' + retval;\n  }\n  return retval;\n}\n\nexport const compress = (publicKey: Uint8Array): Uint8Array => {\n  const publicKeyHex = Buffer.from(publicKey).toString('hex');\n  const xHex = publicKeyHex.slice(0, publicKeyHex.length / 2);\n  const yHex = publicKeyHex.slice(publicKeyHex.length / 2, publicKeyHex.length);\n  const xOctet = Uint8Array.from(Buffer.from(xHex, 'hex'));\n  const yOctet = Uint8Array.from(Buffer.from(yHex, 'hex'));\n  return compressECPoint(xOctet, yOctet);\n};\n\nconst curveToPointLength: any = {\n  'P-256': 64,\n  'P-384': 96,\n  'P-521': 132,\n};\n\nexport const expand = (publicKey: Uint8Array, curve: string): Uint8Array => {\n  const publicKeyComponent = Buffer.from(publicKey).toString('hex');\n  const { prime, b, pIdent } = getConstantsForCurve(curve);\n  // eslint-disable-next-line\n  var signY: any = (new Number(publicKeyComponent[1]) as any) - 2;\n  var x = new bigInt(publicKeyComponent.substring(2), 16);\n  // y^2 = x^3 - 3x + b\n  let y;\n\n  y = x\n    .pow(3)\n    .subtract(x.multiply(3))\n    .add(b)\n    .modPow(pIdent, prime);\n\n  // If the parity doesn't match it's the *other* root\n  if (y.mod(2).toJSNumber() !== signY) {\n    // y = prime - y\n    y = prime.subtract(y);\n  }\n\n  return Buffer.from(\n    pad_with_zeroes(x.toString(16), curveToPointLength[curve]) +\n      pad_with_zeroes(y.toString(16), curveToPointLength[curve]),\n    'hex'\n  );\n};\n","import bigInt from 'big-integer';\n\nexport const getConstantsForCurve = (curve: string) => {\n  let two, prime, b, pIdent;\n\n  if (curve === 'P-256') {\n    two = new bigInt(2);\n    prime = two\n      .pow(256)\n      .subtract(two.pow(224))\n      .add(two.pow(192))\n      .add(two.pow(96))\n      .subtract(1);\n\n    pIdent = prime.add(1).divide(4);\n\n    b = new bigInt(\n      '5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b',\n      16\n    );\n  }\n\n  if (curve === 'P-384') {\n    two = new bigInt(2);\n    prime = two\n      .pow(384)\n      .subtract(two.pow(128))\n      .subtract(two.pow(96))\n      .add(two.pow(32))\n      .subtract(1);\n\n    pIdent = prime.add(1).divide(4);\n    b = new bigInt(\n      'b3312fa7e23ee7e4988e056be3f82d19181d9c6efe8141120314088f5013875ac656398d8a2ed19d2a85c8edd3ec2aef',\n      16\n    );\n  }\n\n  if (curve === 'P-521') {\n    two = new bigInt(2);\n    prime = two.pow(521).subtract(1);\n    b = new bigInt(\n      '00000051953eb9618e1c9a1f929a21a0b68540eea2da725b99b315f3b8b489918ef109e156193951ec7e937b1652c0bd3bb1bf073573df883d2c34f1ef451fd46b503f00',\n      16\n    );\n    pIdent = prime.add(1).divide(4);\n  }\n  return { prime, b, pIdent };\n};\n","import { subtle } from '../crypto';\nimport { base64url, base58 } from '../encoding';\nimport { compress, expand } from '../compression/ec-compression';\n\nconst canonicalize = JSON.stringify;\n\nconst crvToUvarint: any = {\n  'P-256': '8024',\n  'P-384': '8124',\n  'P-521': '8224',\n};\n\nconst uvarintToCrv: any = {\n  '8024': 'P-256',\n  '8124': 'P-384',\n  '8224': 'P-521',\n};\n\nexport const getJwkFromMulticodec = (fingerprint: string) => {\n  const decoders: any = {\n    z: base58,\n    u: base64url,\n  };\n  const encoding = fingerprint[0];\n  const decoded = decoders[encoding].decode(fingerprint.substring(1));\n  const prefix = decoded.slice(0, 2);\n  const publicKey = decoded.slice(2);\n  const crv = uvarintToCrv[prefix.toString('hex')];\n  const expanded = expand(publicKey, crv);\n  const x = expanded.slice(0, expanded.length / 2);\n  const y = expanded.slice(expanded.length / 2);\n  return {\n    kty: 'EC',\n    crv,\n    x: base64url.encode(x),\n    y: base64url.encode(y),\n  };\n};\n\nexport const getKid = async (jwk: any) => {\n  const copy = { ...jwk } as any;\n  delete copy.d;\n  delete copy.kid;\n  delete copy.alg;\n  const digest = await subtle.digest(\n    'SHA-256',\n    Buffer.from(canonicalize(copy))\n  );\n  return base64url.encode(digest);\n};\n\nexport const getMulticodec = async (jwk: any) => {\n  const publicKey = [];\n  if (jwk.x) {\n    publicKey.push(Buffer.from(jwk.x, 'base64'));\n  }\n  if (jwk.y) {\n    publicKey.push(Buffer.from(jwk.y, 'base64'));\n  }\n\n  const publicKeyBuffer = Buffer.concat(publicKey);\n  const compressed = Buffer.from(compress(Uint8Array.from(publicKeyBuffer)));\n  return (\n    'z' +\n    base58.encode(\n      Buffer.concat([Buffer.from(crvToUvarint[jwk.crv], 'hex'), compressed])\n    )\n  );\n};\n","import { subtle } from '../crypto';\nimport { JsonWebKey2020 } from '../types';\n\nconst getImportKeyOptsFromJwk = (jwk: any, derive = false) => {\n  if (jwk.kty === 'EC' && jwk.crv === 'P-256') {\n    return {\n      name: derive ? 'ECDH' : 'ECDSA',\n      namedCurve: 'P-256',\n    };\n  }\n\n  if (jwk.kty === 'EC' && jwk.crv === 'P-384') {\n    return {\n      name: derive ? 'ECDH' : 'ECDSA',\n      namedCurve: 'P-384',\n    };\n  }\n\n  if (jwk.kty === 'EC' && jwk.crv === 'P-521') {\n    return {\n      name: derive ? 'ECDH' : 'ECDSA',\n      namedCurve: 'P-521',\n    };\n  }\n\n  if (jwk.kty === 'RSA') {\n    return derive\n      ? {\n          name: 'RSASSA-PKCS1-v1_5',\n          modulusLength: 2048,\n          hash: 'SHA-256',\n          publicExponent: new Uint8Array([1, 0, 1]),\n        }\n      : {\n          name: 'RSASSA-PKCS1-v1_5',\n          modulusLength: 2048,\n          hash: 'SHA-256',\n          publicExponent: new Uint8Array([1, 0, 1]),\n        };\n  }\n\n  throw new Error('Unsupported jwk: ' + JSON.stringify(jwk));\n};\n\nexport const getCryptoKeyFromJsonWebKey2020 = async (\n  keypair: JsonWebKey2020 | { publicKeyJwk: any; privateKeyJwk?: any },\n  derive = false\n) => {\n  if (!keypair.privateKeyJwk) {\n    return subtle.importKey(\n      'jwk',\n      keypair.publicKeyJwk,\n      getImportKeyOptsFromJwk(keypair.publicKeyJwk, derive),\n      true,\n      derive ? [] : ['verify']\n    );\n  }\n  if (keypair.privateKeyJwk) {\n    return subtle.importKey(\n      'jwk',\n      keypair.privateKeyJwk,\n      getImportKeyOptsFromJwk(keypair.privateKeyJwk, derive),\n      true,\n      derive ? ['deriveBits'] : ['sign']\n    );\n  }\n  throw new Error('unsupported key type:  ' + JSON.stringify(keypair));\n};\n","import { JsonWebKey2020 } from '../types';\n\nimport { getCryptoKeyFromJsonWebKey2020 } from './getCryptoKeyFromJsonWebKey2020';\n\nexport const getCryptoKeyPairFromJsonWebKey2020 = async (\n  k: JsonWebKey2020,\n  derive = false\n): Promise<{\n  publicKey: CryptoKey;\n  privateKey?: CryptoKey;\n}> => {\n  let keypair: any = {};\n  if (k.publicKeyJwk) {\n    keypair.publicKey = await getCryptoKeyFromJsonWebKey2020(\n      {\n        publicKeyJwk: k.publicKeyJwk,\n      } as any,\n      derive\n    );\n  }\n  if (k.privateKeyJwk) {\n    keypair.privateKey = await getCryptoKeyFromJsonWebKey2020(\n      {\n        privateKeyJwk: k.privateKeyJwk,\n      } as any,\n      derive\n    );\n  }\n  return keypair;\n};\n","import {\n  JsonWebKey2020,\n  P256Key2021,\n  P384Key2021,\n  P521Key2021,\n} from '../types';\nimport { base58, base64url } from '../encoding';\nimport { getCryptoKeyPairFromJsonWebKey2020 } from './getCryptoKeyPairFromJsonWebKey2020';\nimport { expand } from '../compression/ec-compression';\nconst securityVocabTypeToCrv: any = {\n  P256Key2021: 'P-256',\n  P384Key2021: 'P-384',\n  P521Key2021: 'P-521',\n};\n\nconst convertMultiKey2021ToJsonWebKey2020 = (\n  keyPair: P256Key2021 | P384Key2021 | P521Key2021\n) => {\n  let publicKeyJwk: any = {\n    kty: 'EC',\n    crv: securityVocabTypeToCrv[keyPair.type],\n  };\n\n  if (keyPair.publicKeyBase58) {\n    // assume compressed\n    const publicKey = base58.decode(keyPair.publicKeyBase58);\n    const expanded = expand(Uint8Array.from(publicKey), publicKeyJwk.crv);\n\n    const x = expanded.slice(0, expanded.length / 2);\n    const y = expanded.slice(expanded.length / 2);\n    publicKeyJwk = {\n      ...publicKeyJwk,\n      x: base64url.encode(x),\n      y: base64url.encode(y),\n    };\n  }\n\n  const jsonWebKey: JsonWebKey2020 = {\n    id: keyPair.id,\n    controller: keyPair.controller,\n    type: 'JsonWebKey2020',\n    publicKeyJwk,\n  };\n\n  if (keyPair.privateKeyBase58) {\n    const privateKey = base58.decode(keyPair.privateKeyBase58);\n    jsonWebKey.privateKeyJwk = {\n      ...jsonWebKey.publicKeyJwk,\n      d: base64url.encode(privateKey),\n    };\n  }\n\n  return jsonWebKey;\n};\n\nexport const getCryptoKeyPairFromMultiKey2021 = async (\n  keypair: P256Key2021 | P384Key2021 | P521Key2021,\n  derive = false\n) => {\n  try {\n    const jsonWebKey = convertMultiKey2021ToJsonWebKey2020(keypair);\n    return getCryptoKeyPairFromJsonWebKey2020(jsonWebKey, derive);\n  } catch (e) {\n    //errooor will be thrown\n    throw new Error(`unsupported key type:  ${e}\\n ${JSON.stringify(keypair)}`);\n  }\n};\n","export const getSignatureOptionsFromCryptoKey = (cryptoKey: CryptoKey) => {\n  if (\n    (cryptoKey as any).algorithm.name === 'ECDSA' &&\n    (cryptoKey as any).algorithm.namedCurve === 'P-256'\n  ) {\n    return { name: 'ECDSA', hash: 'SHA-256' };\n  }\n  if (\n    (cryptoKey as any).algorithm.name === 'ECDSA' &&\n    (cryptoKey as any).algorithm.namedCurve === 'P-384'\n  ) {\n    return { name: 'ECDSA', hash: 'SHA-384' };\n  }\n\n  if (\n    (cryptoKey as any).algorithm.name === 'ECDSA' &&\n    (cryptoKey as any).algorithm.namedCurve === 'P-521'\n  ) {\n    return { name: 'ECDSA', hash: 'SHA-512' };\n  }\n\n  if ((cryptoKey as any).algorithm.name === 'RSASSA-PKCS1-v1_5') {\n    return 'RSASSA-PKCS1-v1_5';\n  }\n\n  throw new Error('Unsupported cryptoKey: ' + JSON.stringify(cryptoKey));\n};\n","import { subtle } from '../crypto';\nimport { JsonWebKey2020, Signer, SignerOptions } from '../types';\nimport { getCryptoKeyFromJsonWebKey2020 } from '../key/getCryptoKeyFromJsonWebKey2020';\n\nimport { getSignatureOptionsFromCryptoKey } from './getSignatureOptionsFromCryptoKey';\n\nexport const getSigner = (k: JsonWebKey2020 | CryptoKey): Signer => {\n  return {\n    sign: async ({ data }: SignerOptions): Promise<Uint8Array> => {\n      let cryptoKey = k as CryptoKey;\n\n      if (k.type === 'JsonWebKey2020') {\n        cryptoKey = await getCryptoKeyFromJsonWebKey2020(k);\n      }\n      const signature = await subtle.sign(\n        getSignatureOptionsFromCryptoKey(cryptoKey),\n        cryptoKey,\n        Buffer.from(data)\n      );\n      return new Uint8Array(signature);\n    },\n  };\n};\n","import { subtle } from '../crypto';\nimport { JsonWebKey2020, Verifier, VerifierOptions } from '../types';\n\nimport { getCryptoKeyFromJsonWebKey2020 } from '../key/getCryptoKeyFromJsonWebKey2020';\n\nimport { getSignatureOptionsFromCryptoKey } from './getSignatureOptionsFromCryptoKey';\n\nexport const getVerifier = (\n  k: JsonWebKey2020 | CryptoKey,\n  opts = { ignorePrivateKey: false }\n): Verifier => {\n  return {\n    verify: async ({ signature, data }: VerifierOptions): Promise<boolean> => {\n      let cryptoKey = k as CryptoKey;\n      if (k.type === 'JsonWebKey2020') {\n        if (k.privateKeyJwk) {\n          if (!opts.ignorePrivateKey) {\n            throw new Error('verification method contained private key!');\n          }\n        }\n        cryptoKey = await getCryptoKeyFromJsonWebKey2020(k);\n      }\n      let verified = false;\n      try {\n        verified = await subtle.verify(\n          getSignatureOptionsFromCryptoKey(cryptoKey),\n          cryptoKey,\n          signature,\n          data\n        );\n      } catch (e) {\n        // do nothing\n        // console.warn(signature, data, e);\n      }\n\n      return verified;\n    },\n  };\n};\n","import { base64url } from '../encoding';\nimport {\n  JwsSigner,\n  JwsSignerOptions,\n  DetachedJwsSignerOptions,\n  DetachedJwsSigner,\n  JwsVerifier,\n  JwsVerifierOptions,\n  DetachedJwsVerifier,\n  DetachedJwsVerifierOptions,\n} from '../types';\n\nimport { getSignatureOptionsFromCryptoKey } from './getSignatureOptionsFromCryptoKey';\n\nimport { getSigner as getRawSigner } from './getSigner';\nimport { getVerifier as getRawVerifier } from './getVerifier';\n// beware of ordering.\nconst canonicalize = JSON.stringify;\n\nexport const getJwaAlgFromJwk = (jwk: any) => {\n  if (jwk.kty === 'EC' && jwk.crv === 'P-256') {\n    return 'ES256';\n  }\n  if (jwk.kty === 'EC' && jwk.crv === 'P-384') {\n    return 'ES384';\n  }\n  if (jwk.kty === 'EC' && jwk.crv === 'P-521') {\n    return 'ES512';\n  }\n  if (jwk.kty === 'RSA') {\n    return 'RS256';\n  }\n  throw new Error(\n    'Unsupported getJwaAlgFromJwk for jwk: ' + JSON.stringify(jwk)\n  );\n};\n\nexport const createJws = async (signer: any, payload: any, header: object) => {\n  const encodedHeader = base64url.encode(canonicalize(header));\n  const encodedPayload = base64url.encode(\n    typeof payload === 'string' ? payload : canonicalize(payload)\n  );\n  const toBeSigned = `${encodedHeader}.${encodedPayload}`;\n  const signature = await signer.sign({ data: toBeSigned });\n  return `${toBeSigned}.${base64url.encode(Buffer.from(signature))}`;\n};\n\nexport const verifyJws = async (verifier: any, jws: string) => {\n  const [header, payload, signature] = jws.split('.');\n  const toBeVerified = `${header}.${payload}`;\n  const verified = await verifier.verify({\n    data: Buffer.from(toBeVerified),\n    signature: Buffer.from(signature, 'base64'),\n  });\n\n  return verified;\n};\n\nexport const createDetachedJws = async (\n  signer: any,\n  payload: Uint8Array,\n  header: object\n) => {\n  const encodedHeader = base64url.encode(\n    canonicalize({ ...header, b64: false, crit: ['b64'] })\n  );\n\n  const toBeSigned = new Uint8Array(\n    Buffer.concat([\n      Buffer.from(encodedHeader, 'utf-8'),\n      Buffer.from('.', 'utf-8'),\n      payload,\n    ])\n  );\n  const signature = await signer.sign({ data: toBeSigned });\n  const encodedSignature = base64url.encode(Buffer.from(signature));\n  return `${encodedHeader}..${encodedSignature}`;\n};\n\nexport const verifyDetachedJws = async (\n  verifier: any,\n  payload: Uint8Array,\n  signature: string\n) => {\n  const [encodedHeader, encodedSignature] = signature.split('..');\n\n  const toBeVerified = new Uint8Array(\n    Buffer.concat([\n      Buffer.from(encodedHeader, 'utf-8'),\n      Buffer.from('.', 'utf-8'),\n      payload,\n    ])\n  );\n\n  const verified = await verifier.verify({\n    data: toBeVerified,\n    signature: Buffer.from(encodedSignature, 'base64'),\n  });\n\n  return verified;\n};\n\nconst getAlg = async (cryptoKey: CryptoKey) => {\n  const rawSignatureOptions: any = getSignatureOptionsFromCryptoKey(cryptoKey);\n\n  let alg = 'none';\n\n  if (rawSignatureOptions === 'RSASSA-PKCS1-v1_5') {\n    alg = 'RS256';\n  }\n\n  if (\n    rawSignatureOptions.name === 'ECDSA' &&\n    rawSignatureOptions.hash === 'SHA-256'\n  ) {\n    alg = 'ES256';\n  }\n\n  if (\n    rawSignatureOptions.name === 'ECDSA' &&\n    rawSignatureOptions.hash === 'SHA-384'\n  ) {\n    alg = 'ES384';\n  }\n\n  if (\n    rawSignatureOptions.name === 'ECDSA' &&\n    rawSignatureOptions.hash === 'SHA-512'\n  ) {\n    alg = 'ES512';\n  }\n\n  if (alg === 'none') {\n    throw new Error(`Unsupported signature alg: ${alg}`);\n  } else {\n    return alg;\n  }\n};\n\nexport const getJwsSigner = (cryptoKey: CryptoKey): JwsSigner => {\n  return {\n    sign: async ({ data }: JwsSignerOptions) => {\n      const signer = getRawSigner(cryptoKey);\n      const alg = await getAlg(cryptoKey);\n      return createJws(signer, data, { alg });\n    },\n  };\n};\n\nexport const getDetachedJwsSigner = (\n  cryptoKey: CryptoKey\n): DetachedJwsSigner => {\n  return {\n    sign: async ({ data }: DetachedJwsSignerOptions) => {\n      const signer = getRawSigner(cryptoKey);\n      const alg = await getAlg(cryptoKey);\n      return createDetachedJws(signer, data, { alg });\n    },\n  };\n};\n\nexport const getJwsVerifier = (cryptoKey: CryptoKey): JwsVerifier => {\n  return {\n    verify: async ({ signature }: JwsVerifierOptions) => {\n      const verifier = getRawVerifier(cryptoKey);\n      return verifyJws(verifier, signature);\n    },\n  };\n};\n\nexport const getDetachedJwsVerifier = (\n  cryptoKey: CryptoKey\n): DetachedJwsVerifier => {\n  return {\n    verify: async ({ data, signature }: DetachedJwsVerifierOptions) => {\n      const verifier = getRawVerifier(cryptoKey);\n      return verifyDetachedJws(verifier, data, signature);\n    },\n  };\n};\n","import { subtle } from '../crypto';\nimport { JsonWebKey2020 } from '../types';\n\nimport { getCryptoKeyFromJsonWebKey2020 } from '../key/getCryptoKeyFromJsonWebKey2020';\n\nexport const deriveBitsFromCryptoKey = async (\n  privateKey: CryptoKey,\n  publicKey: CryptoKey\n): Promise<Uint8Array> => {\n  return new Uint8Array(\n    await subtle.deriveBits(\n      {\n        name: 'ECDH',\n        public: publicKey,\n      },\n      privateKey,\n      256\n    )\n  );\n};\n\nexport const deriveBitsFromJsonWebKey2020 = async (\n  localPrivateKey: JsonWebKey2020,\n  remotePublicKey: JsonWebKey2020\n): Promise<Uint8Array> => {\n  if (localPrivateKey.privateKeyJwk.kty === 'RSA') {\n    throw new Error('deriveBits is not supported on this key type');\n  }\n  const privateKey = await getCryptoKeyFromJsonWebKey2020(\n    {\n      publicKeyJwk: {\n        ...localPrivateKey.publicKeyJwk,\n      },\n      privateKeyJwk: {\n        ...localPrivateKey.privateKeyJwk,\n        usages: ['deriveKey', 'deriveBits'],\n      },\n    } as any,\n    true\n  );\n  const publicKey = await getCryptoKeyFromJsonWebKey2020(\n    { publicKeyJwk: remotePublicKey.publicKeyJwk } as any,\n    true\n  );\n\n  if (remotePublicKey.publicKeyJwk.kty !== localPrivateKey.privateKeyJwk.kty) {\n    throw new Error(\n      `local and remote kty must match: ${remotePublicKey.publicKeyJwk.kty} ${localPrivateKey.privateKeyJwk.kty}`\n    );\n  }\n\n  return new Uint8Array(\n    await subtle.deriveBits(\n      {\n        name: 'ECDH',\n        public: publicKey,\n      },\n      privateKey as CryptoKey,\n      256\n    )\n  );\n};\n","import { base58 } from './encoding';\nimport * as key from './key';\nimport { JsonWebKey2020, P384Key2021, P256Key2021, P521Key2021 } from './types';\nimport { compress } from './compression/ec-compression';\n\nexport const toJsonWebKey2020 = async (\n  id: string,\n  controller: string,\n  publicKey: CryptoKey,\n  privateKey?: CryptoKey\n) => {\n  const kp: JsonWebKey2020 = {\n    id: id,\n    type: 'JsonWebKey2020',\n    controller: controller,\n    publicKeyJwk: await key.getJwkFromCryptoKey(publicKey),\n  };\n  if (privateKey) {\n    try {\n      kp.privateKeyJwk = await key.getJwkFromCryptoKey(privateKey);\n    } catch (e) {\n      throw new Error('Cannot export private key');\n    }\n  }\n  return kp;\n};\n\nconst conventionExportHelper = async (\n  id: string,\n  type: string,\n  controller: string,\n  publicKey: any,\n  privateKey?: any\n) => {\n  const publicKeyJwk: any = await key.getJwkFromCryptoKey(publicKey);\n  const privateKeyJwk: any = privateKey\n    ? await key.getJwkFromCryptoKey(privateKey)\n    : undefined;\n  const kp: any = {\n    id,\n    type,\n    controller: controller,\n    publicKeyBase58: base58.encode(\n      compress(\n        Buffer.concat([\n          Buffer.from(publicKeyJwk.x, 'base64'),\n          Buffer.from(publicKeyJwk.y, 'base64'),\n        ])\n      )\n    ),\n  };\n  if (privateKeyJwk) {\n    kp.privateKeyBase58 = base58.encode(Buffer.from(privateKeyJwk.d, 'base64'));\n  }\n  return kp;\n};\n\nexport const toP521Key2021 = async (\n  id: string,\n  controller: string,\n  publicKey: CryptoKey,\n  privateKey?: CryptoKey\n) => {\n  return conventionExportHelper(\n    id,\n    'P521Key2021',\n    controller,\n    publicKey,\n    privateKey\n  ) as Promise<P521Key2021>;\n};\n\nexport const toP384Key2021 = async (\n  id: string,\n  controller: string,\n  publicKey: CryptoKey,\n  privateKey?: CryptoKey\n) => {\n  return conventionExportHelper(\n    id,\n    'P384Key2021',\n    controller,\n    publicKey,\n    privateKey\n  ) as Promise<P384Key2021>;\n};\n\nexport const toP256Key2021 = async (\n  id: string,\n  controller: string,\n  publicKey: CryptoKey,\n  privateKey?: CryptoKey\n) => {\n  return conventionExportHelper(\n    id,\n    'P256Key2021',\n    controller,\n    publicKey,\n    privateKey\n  ) as Promise<P256Key2021>;\n};\n\nexport const exportableTypes = {\n  JsonWebKey2020: toJsonWebKey2020,\n  P521Key2021: toP521Key2021,\n  P384Key2021: toP384Key2021,\n  P256Key2021: toP256Key2021,\n};\n","import {\n  LdKeyPairStatic,\n  LdKeyPairInstance,\n  staticImplements,\n} from '@transmute/ld-key-pair';\n\nimport * as key from './key';\nimport { deriveBitsFromCryptoKey } from './derive-bits';\nimport { getSigner, getVerifier } from './signatures/raw';\nimport {\n  GenerateKeyOpts,\n  JsonWebKey2020,\n  KeyPairOptions,\n  P256Key2021,\n  P384Key2021,\n  P521Key2021,\n} from './types';\n\nimport { getMulticodec, getJwkFromMulticodec } from './key/identifiers';\nimport { getJwkFromCryptoKey } from './key';\nimport { exportableTypes } from './exportAs';\n\n@staticImplements<LdKeyPairStatic>()\nexport class WebCryptoKey implements LdKeyPairInstance {\n  public id: string;\n  public type: string = 'JsonWebKey2020';\n  public controller: string;\n  public publicKey: CryptoKey;\n  public privateKey?: CryptoKey;\n\n  static generate = async (\n    opts: GenerateKeyOpts = { kty: 'EC', crvOrSize: 'P-384' }\n  ) => {\n    const kp = await key.generate(opts);\n    const id = await WebCryptoKey.fingerprintFromPublicKey({\n      id: ``,\n      type: 'JsonWebKey2020',\n      controller: ``,\n      publicKeyJwk: kp.publicKeyJwk,\n    });\n    const {\n      publicKey,\n      privateKey,\n    } = await key.getCryptoKeyPairFromJsonWebKey2020(kp);\n    return new WebCryptoKey({\n      id: `did:key:${id}#${id}`,\n      type: 'JsonWebKey2020',\n      controller: `did:key:${id}`,\n      publicKey,\n      privateKey,\n    });\n  };\n\n  static from = async (\n    k: JsonWebKey2020 | P256Key2021 | P384Key2021 | P521Key2021\n  ) => {\n    if (k.type === 'JsonWebKey2020') {\n      const {\n        publicKey,\n        privateKey,\n      } = await key.getCryptoKeyPairFromJsonWebKey2020(k);\n      return new WebCryptoKey({\n        id: k.id,\n        type: 'JsonWebKey2020',\n        controller: k.controller,\n        publicKey,\n        privateKey,\n      });\n    }\n    const {\n      publicKey,\n      privateKey,\n    } = await key.getCryptoKeyPairFromMultiKey2021(k);\n    return new WebCryptoKey({\n      id: k.id,\n      type: k.type,\n      controller: k.controller,\n      publicKey,\n      privateKey,\n    });\n  };\n\n  static async fingerprintFromPublicKey(\n    publicKey: JsonWebKey2020 | P256Key2021 | P384Key2021 | P521Key2021\n  ) {\n    const k = await WebCryptoKey.from(publicKey);\n    return (await k).fingerprint();\n  }\n\n  static async fromFingerprint({ fingerprint }: { fingerprint: string }) {\n    try {\n      const publicKeyJwk = getJwkFromMulticodec(fingerprint);\n\n      return WebCryptoKey.from({\n        id: `did:key:${fingerprint}#${fingerprint}`,\n        type: 'JsonWebKey2020',\n        controller: `did:key:${fingerprint}`,\n        publicKeyJwk,\n      });\n    } catch (e) {\n      // console.warn(e);\n      throw new Error('Unsupported fingerprint type: ' + fingerprint);\n    }\n  }\n\n  constructor(opts: KeyPairOptions) {\n    this.id = opts.id;\n    this.type = opts.type || 'JsonWebKey2020';\n    this.controller = opts.controller;\n    this.publicKey = opts.publicKey;\n    this.privateKey = opts.privateKey;\n  }\n\n  async fingerprint() {\n    return getMulticodec(await getJwkFromCryptoKey(this.publicKey));\n  }\n\n  async export(\n    options: {\n      privateKey?: boolean;\n      type: 'JsonWebKey2020' | 'P521Key2021' | 'P384Key2021' | 'P256Key2021';\n    } = {\n      privateKey: false,\n      type: 'JsonWebKey2020',\n    }\n  ): Promise<JsonWebKey2020 | P521Key2021 | P384Key2021 | P256Key2021> {\n    if (exportableTypes[options.type]) {\n      return exportableTypes[options.type](\n        this.id,\n        this.controller,\n        this.publicKey,\n        options.privateKey ? this.privateKey : undefined\n      );\n    }\n    throw new Error('Unsupported export options: ' + JSON.stringify(options));\n  }\n\n  signer(type: 'Ecdsa' = 'Ecdsa') {\n    if (this.privateKey) {\n      return getSigner(this.privateKey);\n    }\n    throw new Error(`No private key to sign ${type} with.`);\n  }\n  verifier(type: 'Ecdsa' = 'Ecdsa') {\n    if (this.publicKey) {\n      return getVerifier(this.publicKey);\n    }\n    throw new Error(`No public key to verify ${type} with.`);\n  }\n\n  async deriveSecret({\n    publicKey,\n  }: {\n    publicKey: JsonWebKey2020 | P256Key2021 | P384Key2021 | P521Key2021;\n  }) {\n    if (!this.privateKey) {\n      throw new Error('private key is required to deriveSecret');\n    }\n    let localPrivateKey = this.privateKey;\n    // This is required by web crypto to set the key type.\n    // so that deriveBits may be called.\n    if (this.privateKey?.extractable) {\n      localPrivateKey = (\n        await key.getCryptoKeyPairFromJsonWebKey2020(\n          (await this.export({\n            type: 'JsonWebKey2020',\n            privateKey: true,\n          })) as JsonWebKey2020,\n          true\n        )\n      ).privateKey as CryptoKey;\n    }\n    const remotePublicKey =\n      publicKey.type === 'JsonWebKey2020'\n        ? await key.getCryptoKeyPairFromJsonWebKey2020(publicKey, true)\n        : await key.getCryptoKeyPairFromMultiKey2021(publicKey, true);\n\n    return deriveBitsFromCryptoKey(localPrivateKey, remotePublicKey.publicKey);\n  }\n}\n"],"names":["runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","generator","create","Generator","context","Context","_invoke","state","method","arg","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function","subtle","window","jest","crypto","Crypto","allowedMap","namedCurve","modulusLength","hash","publicExponent","Uint8Array","getJwkFromCryptoKey","cryptoKey","exportKey","jwk","ext","key_ops","kty","crv","getCleanJwksFromCryptoKeyPair","publicKey","privateKey","publicKeyJwk","privateKeyJwk","generateKey","options","generate","opts","crvOrSize","id","controller","console","warn","JSON","stringify","base","ALPHABET","BASE_MAP","j","x","xc","charCodeAt","BASE","LEADER","FACTOR","Math","log","iFACTOR","decodeUnsafe","source","Buffer","alloc","psz","zeroes","size","b256","carry","it3","it4","vch","allocUnsafe","fill","encode","Array","isArray","from","isBuffer","pbegin","pend","b58","it1","it2","str","repeat","decode","string","buffer","base58","base64","unencoded","encoded","base64url","replace","pad_with_zeroes","number","retval","compress","y","out","publicKeyHex","xHex","yHex","set","curveToPointLength","expand","curve","publicKeyComponent","two","prime","b","pIdent","bigInt","pow","subtract","add","divide","getConstantsForCurve","signY","Number","substring","multiply","modPow","mod","toJSNumber","canonicalize","crvToUvarint","uvarintToCrv","getJwkFromMulticodec","fingerprint","decoded","z","u","prefix","expanded","getKid","copy","d","kid","alg","digest","getMulticodec","publicKeyBuffer","concat","compressed","getImportKeyOptsFromJwk","derive","getCryptoKeyFromJsonWebKey2020","keypair","importKey","getCryptoKeyPairFromJsonWebKey2020","k","securityVocabTypeToCrv","P256Key2021","P384Key2021","P521Key2021","convertMultiKey2021ToJsonWebKey2020","keyPair","publicKeyBase58","jsonWebKey","privateKeyBase58","getCryptoKeyPairFromMultiKey2021","getSignatureOptionsFromCryptoKey","algorithm","getSigner","sign","data","getVerifier","ignorePrivateKey","verify","signature","verified","createJws","signer","payload","header","encodedHeader","encodedPayload","toBeSigned","verifyJws","verifier","jws","split","toBeVerified","createDetachedJws","b64","crit","encodedSignature","verifyDetachedJws","getAlg","rawSignatureOptions","getRawSigner","getRawVerifier","deriveBitsFromCryptoKey","deriveBits","deriveBitsFromJsonWebKey2020","localPrivateKey","remotePublicKey","usages","toJsonWebKey2020","kp","conventionExportHelper","exportableTypes","JsonWebKey2020","WebCryptoKey","fingerprintFromPublicKey","WebCryptoKey_1","fromFingerprint","deriveSecret","_this$privateKey","extractable","staticImplements"],"mappings":"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"}