{"version":3,"file":"x25519-key-pair.cjs.production.min.js","sources":["../node_modules/regenerator-runtime/runtime.js","../src/encoding/base-x.ts","../src/encoding/base58.ts","../src/encoding/base64url.ts","../src/getMultibaseFingerprintFromPublicKeyBytes.ts","../src/constants.ts","../src/getPublicKeyFromPublicKeyJwk.ts","../src/importFrom.ts","../src/getKeyPairFromPrivateKeyJwk.ts","../src/exportAs.ts","../src/X25519KeyPair.ts"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\n\nexport function base(ALPHABET) {\n  if (ALPHABET.length >= 255) {\n    throw new TypeError('Alphabet too long');\n  }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) {\n      throw new TypeError(x + ' is ambiguous');\n    }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256); // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE); // log(256) / log(BASE), rounded up\n  function encode(source: any) {\n    if (Array.isArray(source) || source instanceof Uint8Array) {\n      source = Buffer.from(source);\n    }\n    if (!Buffer.isBuffer(source)) {\n      throw new TypeError('Expected Buffer');\n    }\n    if (source.length === 0) {\n      return '';\n    }\n    // Skip & count leading zeroes.\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n    // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0;\n    var b58 = new Uint8Array(size);\n    // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n      // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0;\n      for (\n        var it1 = size - 1;\n        (carry !== 0 || i < length) && it1 !== -1;\n        it1--, i++\n      ) {\n        carry += (256 * b58[it1]) >>> 0;\n        b58[it1] = carry % BASE >>> 0;\n        carry = (carry / BASE) >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      pbegin++;\n    }\n    // Skip leading zeroes in base58 result.\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n    // Translate the result into a string.\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) {\n      str += ALPHABET.charAt(b58[it2]);\n    }\n    return str;\n  }\n  function decodeUnsafe(source: any) {\n    if (typeof source !== 'string') {\n      throw new TypeError('Expected String');\n    }\n    if (source.length === 0) {\n      return Buffer.alloc(0);\n    }\n    var psz = 0;\n    // Skip leading spaces.\n    if (source[psz] === ' ') {\n      return;\n    }\n    // Skip and count leading '1's.\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n    // Allocate enough space in big-endian base256 representation.\n    var size = ((source.length - psz) * FACTOR + 1) >>> 0; // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size);\n    // Process the characters.\n    while (source[psz]) {\n      // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n      // Invalid character\n      if (carry === 255) {\n        return;\n      }\n      var i = 0;\n      for (\n        var it3 = size - 1;\n        (carry !== 0 || i < length) && it3 !== -1;\n        it3--, i++\n      ) {\n        carry += (BASE * b256[it3]) >>> 0;\n        b256[it3] = carry % 256 >>> 0;\n        carry = (carry / 256) >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      psz++;\n    }\n    // Skip trailing spaces.\n    if (source[psz] === ' ') {\n      return;\n    }\n    // Skip leading zeroes in b256.\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = Buffer.allocUnsafe(zeroes + (size - it4));\n    vch.fill(0x00, 0, zeroes);\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch;\n  }\n  function decode(string: string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) {\n      return buffer;\n    }\n    throw new Error('Non-base' + BASE + ' character');\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode,\n  };\n}\n","import { base } from './base-x';\n\nconst ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\n\nexport const base58 = base(ALPHABET);\n","export const base64 = {\n  encode: (unencoded: any) => {\n    return Buffer.from(unencoded || '').toString('base64');\n  },\n  decode: (encoded: any) => {\n    return Buffer.from(encoded || '', 'base64').toString('utf8');\n  },\n};\n\nexport const base64url = {\n  encode: (unencoded: any) => {\n    var encoded = base64.encode(unencoded);\n    return encoded\n      .replace(/\\+/g, '-')\n      .replace(/\\//g, '_')\n      .replace(/=+$/g, '');\n  },\n  decode: (encoded: any) => {\n    encoded = encoded.replace(/-/g, '+').replace(/_/g, '/');\n    while (encoded.length % 4) encoded += '=';\n    return base64.decode(encoded);\n  },\n};\n","import { base58, base64url } from './encoding';\nimport {\n  X25519_MULTICODEC_IDENTIFIER,\n  VARIABLE_INTEGER_TRAILING_BYTE,\n} from './constants';\nexport const getMultibaseFingerprintFromPublicKeyBytes = (\n  publicKey: Uint8Array,\n  encoding = 'base58btc'\n): string => {\n  const buffer = new Uint8Array(2 + publicKey.length);\n  buffer[0] = X25519_MULTICODEC_IDENTIFIER;\n  buffer[1] = VARIABLE_INTEGER_TRAILING_BYTE;\n  buffer.set(publicKey, 2);\n  if (encoding === 'base58btc') {\n    return `z${base58.encode(buffer)}`;\n  }\n  if (encoding === 'base64url') {\n    return `u${base64url.encode(buffer)}`;\n  }\n  throw new Error('Unsupported encoding: ' + encoding);\n};\n","/**\n * z represents the multibase encoding scheme of base58 encoding\n * @see https://github.com/multiformats/multibase/blob/master/multibase.csv#L18\n * @ignore\n */\nconst MULTIBASE_ENCODED_BASE58_IDENTIFIER = 'z';\n\n/**\n * 0x01 indicates the end of the leading bytes according to variable integer spec\n * @see https://github.com/multiformats/multicodec\n * @ignore\n */\nconst VARIABLE_INTEGER_TRAILING_BYTE = 0x01;\n\n/**\n * 0xec indicates a X25519 public key\n *\n */\nconst X25519_MULTICODEC_IDENTIFIER = 0xec;\n\nexport {\n  MULTIBASE_ENCODED_BASE58_IDENTIFIER,\n  VARIABLE_INTEGER_TRAILING_BYTE,\n  X25519_MULTICODEC_IDENTIFIER,\n};\n","export const getPublicKeyFromPublicKeyJwk = (publicKeyJwk: any) => {\n  return Uint8Array.from(Buffer.from(publicKeyJwk.x, 'base64'));\n};\n","import { JsonWebKey2020, X25519KeyAgreementKey2019 } from './types';\n\nimport { getPublicKeyFromPublicKeyJwk } from './getPublicKeyFromPublicKeyJwk';\nimport { getKeyPairFromPrivateKeyJwk } from './getKeyPairFromPrivateKeyJwk';\nimport { base58 } from './encoding';\n\nexport const fromJsonWebKey2020 = (\n  k: JsonWebKey2020\n): { publicKey: Uint8Array; privateKey?: Uint8Array } => {\n  const publicKey = getPublicKeyFromPublicKeyJwk(k.publicKeyJwk);\n  let privateKey = undefined;\n  if (k.privateKeyJwk) {\n    ({ privateKey } = getKeyPairFromPrivateKeyJwk(k.privateKeyJwk));\n  }\n  return { publicKey, privateKey };\n};\n\nexport const fromX25519KeyAgreementKey2019 = (\n  k: X25519KeyAgreementKey2019\n): { publicKey: Uint8Array; privateKey?: Uint8Array } => {\n  const publicKey = base58.decode(k.publicKeyBase58);\n  let privateKey = undefined;\n  if (k.privateKeyBase58) {\n    privateKey = Uint8Array.from(base58.decode(k.privateKeyBase58));\n  }\n  return { publicKey, privateKey };\n};\n\nexport const importableTypes = {\n  JsonWebKey2020: fromJsonWebKey2020,\n  X25519KeyAgreementKey2019: fromX25519KeyAgreementKey2019,\n};\n","import { getPublicKeyFromPublicKeyJwk } from './getPublicKeyFromPublicKeyJwk';\n\nexport const getKeyPairFromPrivateKeyJwk = (privateKeyJwk: any) => {\n  return {\n    publicKey: getPublicKeyFromPublicKeyJwk(privateKeyJwk),\n    privateKey: Uint8Array.from(Buffer.from(privateKeyJwk.d, 'base64')),\n  };\n};\n","import { base58, base64url } from './encoding';\nimport { JsonWebKey2020, X25519KeyAgreementKey2019 } from './types';\n\nexport const toJsonWebKey2020 = (\n  id: string,\n  controller: string,\n  publicKey: Uint8Array,\n  privateKey?: Uint8Array\n) => {\n  const publicKeyJwk = {\n    kty: 'OKP',\n    crv: 'X25519',\n    x: base64url.encode(publicKey),\n  };\n  const k: JsonWebKey2020 = {\n    id: id,\n    type: 'JsonWebKey2020',\n    controller: controller,\n    publicKeyJwk,\n  };\n  if (privateKey) {\n    k.privateKeyJwk = {\n      ...publicKeyJwk,\n      d: base64url.encode(privateKey),\n    };\n  }\n  return k;\n};\n\nexport const toX25519KeyAgreementKey2019 = (\n  id: string,\n  controller: string,\n  publicKey: Uint8Array,\n  privateKey?: Uint8Array\n) => {\n  const k: X25519KeyAgreementKey2019 = {\n    id: id,\n    type: 'X25519KeyAgreementKey2019',\n    controller: controller,\n    publicKeyBase58: base58.encode(publicKey),\n  };\n  if (privateKey) {\n    k.privateKeyBase58 = base58.encode(privateKey);\n  }\n  return k;\n};\n\nexport const exportableTypes = {\n  JsonWebKey2020: toJsonWebKey2020,\n  X25519KeyAgreementKey2019: toX25519KeyAgreementKey2019,\n};\n","import * as x25519 from '@stablelib/x25519';\nimport {\n  LdKeyPairStatic,\n  LdKeyPairInstance,\n  staticImplements,\n} from '@transmute/ld-key-pair';\n\nimport { getMultibaseFingerprintFromPublicKeyBytes } from './getMultibaseFingerprintFromPublicKeyBytes';\n\nimport { JsonWebKey2020, X25519KeyAgreementKey2019 } from './types';\n\nimport { importableTypes } from './importFrom';\nimport { exportableTypes } from './exportAs';\nimport { base58 } from './encoding';\nimport {\n  X25519_MULTICODEC_IDENTIFIER,\n  VARIABLE_INTEGER_TRAILING_BYTE,\n} from './constants';\n\n@staticImplements<LdKeyPairStatic>()\nexport class X25519KeyPair implements LdKeyPairInstance {\n  public id: string;\n  public type: string = 'JsonWebKey2020';\n  public controller: string;\n  public publicKey: Uint8Array;\n  public privateKey?: Uint8Array;\n\n  static async fingerprintFromPublicKey(importableType: JsonWebKey2020) {\n    const { publicKey } = await X25519KeyPair.from(importableType);\n    return getMultibaseFingerprintFromPublicKeyBytes(publicKey);\n  }\n\n  static generate = async ({\n    secureRandom,\n  }: {\n    secureRandom: () => Uint8Array;\n  }) => {\n    const key = x25519.generateKeyPair({\n      isAvailable: true,\n      randomBytes: secureRandom,\n    });\n\n    const fingerprint = getMultibaseFingerprintFromPublicKeyBytes(\n      key.publicKey\n    );\n\n    const controller = `did:key:${fingerprint}`;\n    const id = `${controller}#${fingerprint}`;\n\n    return new X25519KeyPair({\n      id: id,\n      type: 'JsonWebKey2020',\n      controller: controller,\n      publicKey: key.publicKey,\n      privateKey: key.secretKey,\n    });\n  };\n\n  static from = async (k: JsonWebKey2020 | X25519KeyAgreementKey2019) => {\n    const { publicKey, privateKey } = importableTypes[k.type](k as any);\n    return new X25519KeyPair({\n      id: k.id,\n      type: k.type,\n      controller: k.controller,\n      publicKey,\n      privateKey,\n    });\n  };\n\n  static async fromFingerprint({ fingerprint }: { fingerprint: string }) {\n    const buffer = base58.decode(fingerprint.substring(1));\n\n    if (\n      buffer[0] === X25519_MULTICODEC_IDENTIFIER &&\n      buffer[1] === VARIABLE_INTEGER_TRAILING_BYTE\n    ) {\n      let kp = await X25519KeyPair.from({\n        id: '',\n        controller: '',\n        type: 'X25519KeyAgreementKey2019',\n        publicKeyBase58: base58.encode(buffer.slice(2)),\n      });\n      const f = await kp.fingerprint();\n      kp.id = `did:key:${f}#${f}`;\n      kp.controller = `did:key:${f}`;\n      return kp;\n    }\n    throw new Error('Unsupported fingerprint type: ' + fingerprint);\n  }\n  constructor(opts: {\n    id: string;\n    type: string;\n    controller: string;\n    publicKey: Uint8Array;\n    privateKey?: Uint8Array;\n  }) {\n    this.id = opts.id;\n    this.type = opts.type || 'JsonWebKey2020';\n    this.controller = opts.controller;\n    this.publicKey = opts.publicKey;\n    this.privateKey = opts.privateKey;\n  }\n\n  async fingerprint() {\n    return getMultibaseFingerprintFromPublicKeyBytes(this.publicKey);\n  }\n\n  async export(\n    options: {\n      privateKey?: boolean;\n      type: 'JsonWebKey2020' | 'X25519KeyAgreementKey2019';\n    } = {\n      privateKey: false,\n      type: 'JsonWebKey2020',\n    }\n  ): Promise<JsonWebKey2020 | X25519KeyAgreementKey2019> {\n    if (exportableTypes[options.type]) {\n      return exportableTypes[options.type](\n        this.id,\n        this.controller,\n        this.publicKey,\n        options.privateKey ? this.privateKey : undefined\n      );\n    }\n    throw new Error('Unsupported export options: ' + JSON.stringify(options));\n  }\n\n  async deriveSecret({\n    publicKey,\n  }: {\n    publicKey: JsonWebKey2020 | X25519KeyAgreementKey2019;\n  }) {\n    const remote = await X25519KeyPair.from(publicKey);\n    if (!this.privateKey) {\n      throw new Error('No private key available for deriveSecret');\n    }\n    const scalarMultipleResult = x25519.sharedKey(\n      this.privateKey,\n      remote.publicKey,\n      true\n    );\n    return scalarMultipleResult;\n  }\n}\n"],"names":["runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","generator","create","Generator","context","Context","_invoke","state","method","arg","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function","base","ALPHABET","BASE_MAP","Uint8Array","j","x","xc","charCodeAt","BASE","LEADER","FACTOR","Math","log","iFACTOR","decodeUnsafe","source","Buffer","alloc","psz","zeroes","size","b256","carry","it3","it4","vch","allocUnsafe","fill","encode","Array","isArray","from","isBuffer","pbegin","pend","b58","it1","it2","str","repeat","decode","string","buffer","base58","base64url","unencoded","base64","replace","getMultibaseFingerprintFromPublicKeyBytes","publicKey","encoding","set","getPublicKeyFromPublicKeyJwk","publicKeyJwk","importableTypes","JsonWebKey2020","k","privateKeyJwk","privateKey","d","X25519KeyAgreementKey2019","publicKeyBase58","privateKeyBase58","exportableTypes","id","controller","kty","crv","X25519KeyPair","opts","fingerprintFromPublicKey","importableType","X25519KeyPair_1","fromFingerprint","fingerprint","substring","kp","f","options","JSON","stringify","deriveSecret","remote","scalarMultipleResult","x25519","isAvailable","randomBytes","secureRandom","secretKey","staticImplements"],"mappings":"8rBAOA,IAAIA,EAAW,SAAUC,GAGvB,IAAIC,EAAKC,OAAOC,UACZC,EAASH,EAAGI,eAEZC,EAA4B,mBAAXC,OAAwBA,OAAS,GAClDC,EAAiBF,EAAQG,UAAY,aACrCC,EAAsBJ,EAAQK,eAAiB,kBAC/CC,EAAoBN,EAAQO,aAAe,gBAE/C,SAASC,EAAOC,EAAKC,EAAKC,GAOxB,OANAf,OAAOgB,eAAeH,EAAKC,EAAK,CAC9BC,MAAOA,EACPE,YAAY,EACZC,cAAc,EACdC,UAAU,IAELN,EAAIC,GAEb,IAEEF,EAAO,GAAI,IACX,MAAOQ,GACPR,EAAS,SAASC,EAAKC,EAAKC,GAC1B,OAAOF,EAAIC,GAAOC,GAItB,SAASM,EAAKC,EAASC,EAASC,EAAMC,GAEpC,IACIC,EAAY1B,OAAO2B,QADFJ,GAAWA,EAAQtB,qBAAqB2B,EAAYL,EAAUK,GACtC3B,WACzC4B,EAAU,IAAIC,EAAQL,GAAe,IAMzC,OAFAC,EAAUK,QAsMZ,SAA0BT,EAASE,EAAMK,GACvC,IAAIG,EA/KuB,iBAiL3B,OAAO,SAAgBC,EAAQC,GAC7B,GAhLoB,cAgLhBF,EACF,MAAM,IAAIG,MAAM,gCAGlB,GAnLoB,cAmLhBH,EAA6B,CAC/B,GAAe,UAAXC,EACF,MAAMC,EAKR,MAoQG,CAAEnB,WAzfPqB,EAyfyBC,MAAM,GA9P/B,IAHAR,EAAQI,OAASA,EACjBJ,EAAQK,IAAMA,IAED,CACX,IAAII,EAAWT,EAAQS,SACvB,GAAIA,EAAU,CACZ,IAAIC,EAAiBC,EAAoBF,EAAUT,GACnD,GAAIU,EAAgB,CAClB,GAAIA,IAAmBE,EAAkB,SACzC,OAAOF,GAIX,GAAuB,SAAnBV,EAAQI,OAGVJ,EAAQa,KAAOb,EAAQc,MAAQd,EAAQK,SAElC,GAAuB,UAAnBL,EAAQI,OAAoB,CACrC,GAnNqB,mBAmNjBD,EAEF,MADAA,EAjNc,YAkNRH,EAAQK,IAGhBL,EAAQe,kBAAkBf,EAAQK,SAEN,WAAnBL,EAAQI,QACjBJ,EAAQgB,OAAO,SAAUhB,EAAQK,KAGnCF,EA5NkB,YA8NlB,IAAIc,EAASC,EAASzB,EAASE,EAAMK,GACrC,GAAoB,WAAhBiB,EAAOE,KAAmB,CAO5B,GAJAhB,EAAQH,EAAQQ,KAjOA,YAFK,iBAuOjBS,EAAOZ,MAAQO,EACjB,SAGF,MAAO,CACL1B,MAAO+B,EAAOZ,IACdG,KAAMR,EAAQQ,MAGS,UAAhBS,EAAOE,OAChBhB,EA/OgB,YAkPhBH,EAAQI,OAAS,QACjBJ,EAAQK,IAAMY,EAAOZ,OA9QPe,CAAiB3B,EAASE,EAAMK,GAE7CH,EAcT,SAASqB,EAASG,EAAIrC,EAAKqB,GACzB,IACE,MAAO,CAAEc,KAAM,SAAUd,IAAKgB,EAAGC,KAAKtC,EAAKqB,IAC3C,MAAOd,GACP,MAAO,CAAE4B,KAAM,QAASd,IAAKd,IAhBjCtB,EAAQuB,KAAOA,EAoBf,IAOIoB,EAAmB,GAMvB,SAASb,KACT,SAASwB,KACT,SAASC,KAIT,IAAIC,EAAoB,GACxBA,EAAkBhD,GAAkB,WAClC,OAAOiD,MAGT,IAAIC,EAAWxD,OAAOyD,eAClBC,EAA0BF,GAAYA,EAASA,EAASG,EAAO,MAC/DD,GACAA,IAA4B3D,GAC5BG,EAAOiD,KAAKO,EAAyBpD,KAGvCgD,EAAoBI,GAGtB,IAAIE,EAAKP,EAA2BpD,UAClC2B,EAAU3B,UAAYD,OAAO2B,OAAO2B,GAWtC,SAASO,EAAsB5D,GAC7B,CAAC,OAAQ,QAAS,UAAU6D,SAAQ,SAAS7B,GAC3CrB,EAAOX,EAAWgC,GAAQ,SAASC,GACjC,OAAOqB,KAAKxB,QAAQE,EAAQC,SAkClC,SAAS6B,EAAcrC,EAAWsC,GAgChC,IAAIC,EAgCJV,KAAKxB,QA9BL,SAAiBE,EAAQC,GACvB,SAASgC,IACP,OAAO,IAAIF,GAAY,SAASG,EAASC,IAnC7C,SAASC,EAAOpC,EAAQC,EAAKiC,EAASC,GACpC,IAAItB,EAASC,EAASrB,EAAUO,GAASP,EAAWQ,GACpD,GAAoB,UAAhBY,EAAOE,KAEJ,CACL,IAAIsB,EAASxB,EAAOZ,IAChBnB,EAAQuD,EAAOvD,MACnB,OAAIA,GACiB,iBAAVA,GACPb,EAAOiD,KAAKpC,EAAO,WACdiD,EAAYG,QAAQpD,EAAMwD,SAASC,MAAK,SAASzD,GACtDsD,EAAO,OAAQtD,EAAOoD,EAASC,MAC9B,SAAShD,GACViD,EAAO,QAASjD,EAAK+C,EAASC,MAI3BJ,EAAYG,QAAQpD,GAAOyD,MAAK,SAASC,GAI9CH,EAAOvD,MAAQ0D,EACfN,EAAQG,MACP,SAASI,GAGV,OAAOL,EAAO,QAASK,EAAOP,EAASC,MAvBzCA,EAAOtB,EAAOZ,KAiCZmC,CAAOpC,EAAQC,EAAKiC,EAASC,MAIjC,OAAOH,EAaLA,EAAkBA,EAAgBO,KAChCN,EAGAA,GACEA,KAkHV,SAAS1B,EAAoBF,EAAUT,GACrC,IAAII,EAASK,EAAS/B,SAASsB,EAAQI,QACvC,QA1TEG,IA0TEH,EAAsB,CAKxB,GAFAJ,EAAQS,SAAW,KAEI,UAAnBT,EAAQI,OAAoB,CAE9B,GAAIK,EAAS/B,SAAiB,SAG5BsB,EAAQI,OAAS,SACjBJ,EAAQK,SArUZE,EAsUII,EAAoBF,EAAUT,GAEP,UAAnBA,EAAQI,QAGV,OAAOQ,EAIXZ,EAAQI,OAAS,QACjBJ,EAAQK,IAAM,IAAIyC,UAChB,kDAGJ,OAAOlC,EAGT,IAAIK,EAASC,EAASd,EAAQK,EAAS/B,SAAUsB,EAAQK,KAEzD,GAAoB,UAAhBY,EAAOE,KAIT,OAHAnB,EAAQI,OAAS,QACjBJ,EAAQK,IAAMY,EAAOZ,IACrBL,EAAQS,SAAW,KACZG,EAGT,IAAImC,EAAO9B,EAAOZ,IAElB,OAAM0C,EAOFA,EAAKvC,MAGPR,EAAQS,EAASuC,YAAcD,EAAK7D,MAGpCc,EAAQiD,KAAOxC,EAASyC,QAQD,WAAnBlD,EAAQI,SACVJ,EAAQI,OAAS,OACjBJ,EAAQK,SAzXVE,GAmYFP,EAAQS,SAAW,KACZG,GANEmC,GA3BP/C,EAAQI,OAAS,QACjBJ,EAAQK,IAAM,IAAIyC,UAAU,oCAC5B9C,EAAQS,SAAW,KACZG,GAoDX,SAASuC,EAAaC,GACpB,IAAIC,EAAQ,CAAEC,OAAQF,EAAK,IAEvB,KAAKA,IACPC,EAAME,SAAWH,EAAK,IAGpB,KAAKA,IACPC,EAAMG,WAAaJ,EAAK,GACxBC,EAAMI,SAAWL,EAAK,IAGxB1B,KAAKgC,WAAWC,KAAKN,GAGvB,SAASO,EAAcP,GACrB,IAAIpC,EAASoC,EAAMQ,YAAc,GACjC5C,EAAOE,KAAO,gBACPF,EAAOZ,IACdgD,EAAMQ,WAAa5C,EAGrB,SAAShB,EAAQL,GAIf8B,KAAKgC,WAAa,CAAC,CAAEJ,OAAQ,SAC7B1D,EAAYqC,QAAQkB,EAAczB,MAClCA,KAAKoC,OAAM,GA8Bb,SAAShC,EAAOiC,GACd,GAAIA,EAAU,CACZ,IAAIC,EAAiBD,EAAStF,GAC9B,GAAIuF,EACF,OAAOA,EAAe1C,KAAKyC,GAG7B,GAA6B,mBAAlBA,EAASd,KAClB,OAAOc,EAGT,IAAKE,MAAMF,EAASG,QAAS,CAC3B,IAAIC,GAAK,EAAGlB,EAAO,SAASA,IAC1B,OAASkB,EAAIJ,EAASG,QACpB,GAAI7F,EAAOiD,KAAKyC,EAAUI,GAGxB,OAFAlB,EAAK/D,MAAQ6E,EAASI,GACtBlB,EAAKzC,MAAO,EACLyC,EAOX,OAHAA,EAAK/D,WAzeTqB,EA0eI0C,EAAKzC,MAAO,EAELyC,GAGT,OAAOA,EAAKA,KAAOA,GAKvB,MAAO,CAAEA,KAAMmB,GAIjB,SAASA,IACP,MAAO,CAAElF,WAzfPqB,EAyfyBC,MAAM,GA+MnC,OA5mBAe,EAAkBnD,UAAY2D,EAAGsC,YAAc7C,EAC/CA,EAA2B6C,YAAc9C,EACzCA,EAAkB+C,YAAcvF,EAC9ByC,EACA3C,EACA,qBAaFZ,EAAQsG,oBAAsB,SAASC,GACrC,IAAIC,EAAyB,mBAAXD,GAAyBA,EAAOH,YAClD,QAAOI,IACHA,IAASlD,GAG2B,uBAAnCkD,EAAKH,aAAeG,EAAKC,QAIhCzG,EAAQ0G,KAAO,SAASH,GAQtB,OAPIrG,OAAOyG,eACTzG,OAAOyG,eAAeJ,EAAQhD,IAE9BgD,EAAOK,UAAYrD,EACnBzC,EAAOyF,EAAQ3F,EAAmB,sBAEpC2F,EAAOpG,UAAYD,OAAO2B,OAAOiC,GAC1ByC,GAOTvG,EAAQ6G,MAAQ,SAASzE,GACvB,MAAO,CAAEqC,QAASrC,IAsEpB2B,EAAsBE,EAAc9D,WACpC8D,EAAc9D,UAAUO,GAAuB,WAC7C,OAAO+C,MAETzD,EAAQiE,cAAgBA,EAKxBjE,EAAQ8G,MAAQ,SAAStF,EAASC,EAASC,EAAMC,EAAauC,QACxC,IAAhBA,IAAwBA,EAAc6C,SAE1C,IAAIC,EAAO,IAAI/C,EACb1C,EAAKC,EAASC,EAASC,EAAMC,GAC7BuC,GAGF,OAAOlE,EAAQsG,oBAAoB7E,GAC/BuF,EACAA,EAAKhC,OAAON,MAAK,SAASF,GACxB,OAAOA,EAAOjC,KAAOiC,EAAOvD,MAAQ+F,EAAKhC,WAuKjDjB,EAAsBD,GAEtBhD,EAAOgD,EAAIlD,EAAmB,aAO9BkD,EAAGtD,GAAkB,WACnB,OAAOiD,MAGTK,EAAGmD,SAAW,WACZ,MAAO,sBAkCTjH,EAAQkH,KAAO,SAASC,GACtB,IAAID,EAAO,GACX,IAAK,IAAIlG,KAAOmG,EACdD,EAAKxB,KAAK1E,GAMZ,OAJAkG,EAAKE,UAIE,SAASpC,IACd,KAAOkC,EAAKjB,QAAQ,CAClB,IAAIjF,EAAMkG,EAAKG,MACf,GAAIrG,KAAOmG,EAGT,OAFAnC,EAAK/D,MAAQD,EACbgE,EAAKzC,MAAO,EACLyC,EAQX,OADAA,EAAKzC,MAAO,EACLyC,IAsCXhF,EAAQ6D,OAASA,EAMjB7B,EAAQ7B,UAAY,CAClBiG,YAAapE,EAEb6D,MAAO,SAASyB,GAcd,GAbA7D,KAAK8D,KAAO,EACZ9D,KAAKuB,KAAO,EAGZvB,KAAKb,KAAOa,KAAKZ,WApgBjBP,EAqgBAmB,KAAKlB,MAAO,EACZkB,KAAKjB,SAAW,KAEhBiB,KAAKtB,OAAS,OACdsB,KAAKrB,SAzgBLE,EA2gBAmB,KAAKgC,WAAWzB,QAAQ2B,IAEnB2B,EACH,IAAK,IAAIb,KAAQhD,KAEQ,MAAnBgD,EAAKe,OAAO,IACZpH,EAAOiD,KAAKI,KAAMgD,KACjBT,OAAOS,EAAKgB,MAAM,MACrBhE,KAAKgD,QAnhBXnE,IAyhBFoF,KAAM,WACJjE,KAAKlB,MAAO,EAEZ,IACIoF,EADYlE,KAAKgC,WAAW,GACLG,WAC3B,GAAwB,UAApB+B,EAAWzE,KACb,MAAMyE,EAAWvF,IAGnB,OAAOqB,KAAKmE,MAGd9E,kBAAmB,SAAS+E,GAC1B,GAAIpE,KAAKlB,KACP,MAAMsF,EAGR,IAAI9F,EAAU0B,KACd,SAASqE,EAAOC,EAAKC,GAYnB,OAXAhF,EAAOE,KAAO,QACdF,EAAOZ,IAAMyF,EACb9F,EAAQiD,KAAO+C,EAEXC,IAGFjG,EAAQI,OAAS,OACjBJ,EAAQK,SApjBZE,KAujBY0F,EAGZ,IAAK,IAAI9B,EAAIzC,KAAKgC,WAAWQ,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAId,EAAQ3B,KAAKgC,WAAWS,GACxBlD,EAASoC,EAAMQ,WAEnB,GAAqB,SAAjBR,EAAMC,OAIR,OAAOyC,EAAO,OAGhB,GAAI1C,EAAMC,QAAU5B,KAAK8D,KAAM,CAC7B,IAAIU,EAAW7H,EAAOiD,KAAK+B,EAAO,YAC9B8C,EAAa9H,EAAOiD,KAAK+B,EAAO,cAEpC,GAAI6C,GAAYC,EAAY,CAC1B,GAAIzE,KAAK8D,KAAOnC,EAAME,SACpB,OAAOwC,EAAO1C,EAAME,UAAU,GACzB,GAAI7B,KAAK8D,KAAOnC,EAAMG,WAC3B,OAAOuC,EAAO1C,EAAMG,iBAGjB,GAAI0C,GACT,GAAIxE,KAAK8D,KAAOnC,EAAME,SACpB,OAAOwC,EAAO1C,EAAME,UAAU,OAG3B,CAAA,IAAI4C,EAMT,MAAM,IAAI7F,MAAM,0CALhB,GAAIoB,KAAK8D,KAAOnC,EAAMG,WACpB,OAAOuC,EAAO1C,EAAMG,gBAU9BxC,OAAQ,SAASG,EAAMd,GACrB,IAAK,IAAI8D,EAAIzC,KAAKgC,WAAWQ,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAId,EAAQ3B,KAAKgC,WAAWS,GAC5B,GAAId,EAAMC,QAAU5B,KAAK8D,MACrBnH,EAAOiD,KAAK+B,EAAO,eACnB3B,KAAK8D,KAAOnC,EAAMG,WAAY,CAChC,IAAI4C,EAAe/C,EACnB,OAIA+C,IACU,UAATjF,GACS,aAATA,IACDiF,EAAa9C,QAAUjD,GACvBA,GAAO+F,EAAa5C,aAGtB4C,EAAe,MAGjB,IAAInF,EAASmF,EAAeA,EAAavC,WAAa,GAItD,OAHA5C,EAAOE,KAAOA,EACdF,EAAOZ,IAAMA,EAET+F,GACF1E,KAAKtB,OAAS,OACdsB,KAAKuB,KAAOmD,EAAa5C,WAClB5C,GAGFc,KAAK2E,SAASpF,IAGvBoF,SAAU,SAASpF,EAAQwC,GACzB,GAAoB,UAAhBxC,EAAOE,KACT,MAAMF,EAAOZ,IAcf,MAXoB,UAAhBY,EAAOE,MACS,aAAhBF,EAAOE,KACTO,KAAKuB,KAAOhC,EAAOZ,IACM,WAAhBY,EAAOE,MAChBO,KAAKmE,KAAOnE,KAAKrB,IAAMY,EAAOZ,IAC9BqB,KAAKtB,OAAS,SACdsB,KAAKuB,KAAO,OACa,WAAhBhC,EAAOE,MAAqBsC,IACrC/B,KAAKuB,KAAOQ,GAGP7C,GAGT0F,OAAQ,SAAS9C,GACf,IAAK,IAAIW,EAAIzC,KAAKgC,WAAWQ,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAId,EAAQ3B,KAAKgC,WAAWS,GAC5B,GAAId,EAAMG,aAAeA,EAGvB,OAFA9B,KAAK2E,SAAShD,EAAMQ,WAAYR,EAAMI,UACtCG,EAAcP,GACPzC,IAKb2F,MAAS,SAASjD,GAChB,IAAK,IAAIa,EAAIzC,KAAKgC,WAAWQ,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAId,EAAQ3B,KAAKgC,WAAWS,GAC5B,GAAId,EAAMC,SAAWA,EAAQ,CAC3B,IAAIrC,EAASoC,EAAMQ,WACnB,GAAoB,UAAhB5C,EAAOE,KAAkB,CAC3B,IAAIqF,EAASvF,EAAOZ,IACpBuD,EAAcP,GAEhB,OAAOmD,GAMX,MAAM,IAAIlG,MAAM,0BAGlBmG,cAAe,SAAS1C,EAAUf,EAAYE,GAa5C,OAZAxB,KAAKjB,SAAW,CACd/B,SAAUoD,EAAOiC,GACjBf,WAAYA,EACZE,QAASA,GAGS,SAAhBxB,KAAKtB,SAGPsB,KAAKrB,SA7rBPE,GAgsBOK,IAQJ3C,GAOsByI,EAAOzI,SAGtC,IACE0I,mBAAqB3I,EACrB,MAAO4I,GAUPC,SAAS,IAAK,yBAAdA,CAAwC7I,yCCnuB1B8I,EAAKC,MACfA,EAAS7C,QAAU,UACf,IAAIpB,UAAU,6BAElBkE,EAAW,IAAIC,WAAW,KACrBC,EAAI,EAAGA,EAAIF,EAAS9C,OAAQgD,IACnCF,EAASE,GAAK,QAEX,IAAI/C,EAAI,EAAGA,EAAI4C,EAAS7C,OAAQC,IAAK,KACpCgD,EAAIJ,EAAStB,OAAOtB,GACpBiD,EAAKD,EAAEE,WAAW,MACD,MAAjBL,EAASI,SACL,IAAItE,UAAUqE,EAAI,iBAE1BH,EAASI,GAAMjD,MAEbmD,EAAOP,EAAS7C,OAChBqD,EAASR,EAAStB,OAAO,GACzB+B,EAASC,KAAKC,IAAIJ,GAAQG,KAAKC,IAAI,KACnCC,EAAUF,KAAKC,IAAI,KAAOD,KAAKC,IAAIJ,YAuD9BM,EAAaC,MACE,iBAAXA,QACH,IAAI/E,UAAU,sBAEA,IAAlB+E,EAAO3D,cACF4D,OAAOC,MAAM,OAElBC,EAAM,KAEU,MAAhBH,EAAOG,YAIPC,EAAS,EACT/D,EAAS,EACN2D,EAAOG,KAAST,GACrBU,IACAD,YAGEE,GAASL,EAAO3D,OAAS8D,GAAOR,EAAS,IAAO,EAChDW,EAAO,IAAIlB,WAAWiB,GAEnBL,EAAOG,IAAM,KAEdI,EAAQpB,EAASa,EAAOR,WAAWW,OAEzB,MAAVI,iBAGAjE,EAAI,EAEFkE,EAAMH,EAAO,GACN,IAAVE,GAAejE,EAAID,KAAoB,IAATmE,EAC/BA,IAAOlE,IAGPgE,EAAKE,IADLD,GAAUd,EAAOa,EAAKE,KAAU,GACZ,MAAQ,EAC5BD,EAASA,EAAQ,MAAS,KAEd,IAAVA,QACI,IAAI9H,MAAM,kBAElB4D,EAASC,EACT6D,OAGkB,MAAhBH,EAAOG,YAIPM,EAAMJ,EAAOhE,EACVoE,IAAQJ,GAAsB,IAAdC,EAAKG,IAC1BA,QAEEC,EAAMT,OAAOU,YAAYP,GAAUC,EAAOI,IAC9CC,EAAIE,KAAK,EAAM,EAAGR,WACdf,EAAIe,EACDK,IAAQJ,GACbK,EAAIrB,KAAOiB,EAAKG,YAEXC,UASF,CACLG,gBA7Hcb,OACVc,MAAMC,QAAQf,IAAWA,aAAkBZ,cAC7CY,EAASC,OAAOe,KAAKhB,KAElBC,OAAOgB,SAASjB,SACb,IAAI/E,UAAU,sBAEA,IAAlB+E,EAAO3D,aACF,WAGL+D,EAAS,EACT/D,EAAS,EACT6E,EAAS,EACTC,EAAOnB,EAAO3D,OACX6E,IAAWC,GAA2B,IAAnBnB,EAAOkB,IAC/BA,IACAd,YAGEC,GAASc,EAAOD,GAAUpB,EAAU,IAAO,EAC3CsB,EAAM,IAAIhC,WAAWiB,GAElBa,IAAWC,GAAM,SAClBZ,EAAQP,EAAOkB,GAEf5E,EAAI,EAEF+E,EAAMhB,EAAO,GACN,IAAVE,GAAejE,EAAID,KAAoB,IAATgF,EAC/BA,IAAO/E,IAGP8E,EAAIC,IADJd,GAAU,IAAMa,EAAIC,KAAU,GACX5B,IAAS,EAC5Bc,EAASA,EAAQd,IAAU,KAEf,IAAVc,QACI,IAAI9H,MAAM,kBAElB4D,EAASC,EACT4E,YAGEI,EAAMjB,EAAOhE,EACViF,IAAQjB,GAAqB,IAAbe,EAAIE,IACzBA,YAGEC,EAAM7B,EAAO8B,OAAOpB,GACjBkB,EAAMjB,IAAQiB,EACnBC,GAAOrC,EAAStB,OAAOwD,EAAIE,WAEtBC,GA0EPxB,aAAcA,EACd0B,gBAVcC,OACVC,EAAS5B,EAAa2B,MACtBC,SACKA,QAEH,IAAIlJ,MAAM,WAAagH,EAAO,gBCnJxC,MAEamC,EAAS3C,EAFL,8DCOJ4C,EACH,SAACC,UATD,SAACA,UACA7B,OAAOe,KAAKc,GAAa,IAAIzE,SAAS,UAS/B0E,CAAcD,GAEzBE,QAAQ,MAAO,KACfA,QAAQ,MAAO,KACfA,QAAQ,OAAQ,KCVVC,EAA4C,SACvDC,EACAC,YAAAA,IAAAA,EAAW,iBAELR,EAAS,IAAIvC,WAAW,EAAI8C,EAAU7F,WAC5CsF,EAAO,GCQ4B,IDPnCA,EAAO,GCC8B,EDArCA,EAAOS,IAAIF,EAAW,GACL,cAAbC,YACSP,EAAOf,OAAOc,MAEV,cAAbQ,YACSN,EAAiBF,SAExB,IAAIlJ,MAAM,yBAA2B0J,IEnBhCE,EAA+B,SAACC,UACpClD,WAAW4B,KAAKf,OAAOe,KAAKsB,EAAahD,EAAG,YC2BxCiD,EAAkB,CAC7BC,eAvBgC,SAChCC,OCL0CC,EDOpCR,EAAYG,EAA6BI,EAAEH,cAC7CK,OAAajK,SACb+J,EAAEC,gBCPOL,EAF6BK,EDUMD,EAAEC,eAA7CC,ECPSvD,WAAW4B,KAAKf,OAAOe,KAAK0B,EAAcE,EAAG,YDSpD,CAAEV,UAAAA,EAAWS,WAAAA,IAgBpBE,0BAb2C,SAC3CJ,OAEMP,EAAYN,EAAOH,OAAOgB,EAAEK,iBAC9BH,OAAajK,SACb+J,EAAEM,mBACJJ,EAAavD,WAAW4B,KAAKY,EAAOH,OAAOgB,EAAEM,oBAExC,CAAEb,UAAAA,EAAWS,WAAAA,KEsBTK,EAAkB,CAC7BR,eA7C8B,SAC9BS,EACAC,EACAhB,EACAS,OAEML,EAAe,CACnBa,IAAK,MACLC,IAAK,SACL9D,EAAGuC,EAAiBK,IAEhBO,EAAoB,CACxBQ,GAAIA,EACJ3J,KAAM,iBACN4J,WAAYA,EACZZ,aAAAA,UAEEK,IACFF,EAAEC,mBACGJ,GACHM,EAAGf,EAAiBc,MAGjBF,GAuBPI,0BApByC,SACzCI,EACAC,EACAhB,EACAS,OAEMF,EAA+B,CACnCQ,GAAIA,EACJ3J,KAAM,4BACN4J,WAAYA,EACZJ,gBAAiBlB,EAAOf,OAAOqB,WAE7BS,IACFF,EAAEM,iBAAmBnB,EAAOf,OAAO8B,IAE9BF,ICxBIY,8CAqECC,aAnEU,sBA0EfL,GAAKK,EAAKL,QACV3J,KAAOgK,EAAKhK,MAAQ,sBACpB4J,WAAaI,EAAKJ,gBAClBhB,UAAYoB,EAAKpB,eACjBS,WAAaW,EAAKX,aAzEZY,oDAAb,WAAsCC,kFACRC,EAAczC,KAAKwC,mCACxCvB,SADCC,+GAyCGwB,2CAAb,4FLnDmC,OKoD3B/B,EAASC,EAAOH,QADOkC,IAAAA,aACYC,UAAU,KAG1C,IL7D0B,IK8DjCjC,EAAO,oCAEQ8B,EAAczC,KAAK,CAChCiC,GAAI,GACJC,WAAY,GACZ5J,KAAM,4BACNwJ,gBAAiBlB,EAAOf,OAAOc,EAAO9D,MAAM,oBAJ1CgG,kBAMYA,EAAGF,4BACnBE,EAAGZ,eADGa,cACkBA,EACxBD,EAAGX,sBAAwBY,oBACpBD,iBAEH,IAAIpL,MAAM,iCAAmCkL,gIAgB/CA,uCAAN,qGACS1B,EAA0CpI,KAAKqI,qJAGxD,WACE6B,8EAAAA,IAAAA,EAGI,CACFpB,YAAY,EACZrJ,KAAM,oBAGJ0J,EAAgBe,EAAQzK,+CACnB0J,EAAgBe,EAAQzK,MAC7BO,KAAKoJ,GACLpJ,KAAKqJ,WACLrJ,KAAKqI,UACL6B,EAAQpB,WAAa9I,KAAK8I,gBAAajK,iBAGrC,IAAID,MAAM,+BAAiCuL,KAAKC,UAAUF,4GAG5DG,wCAAN,8FACEhC,IAAAA,mBAIqBuB,EAAczC,KAAKkB,aAAlCiC,SACDtK,KAAK8I,iCACF,IAAIlK,MAAM,2DAEZ2L,EAAuBC,YAC3BxK,KAAK8I,WACLwB,EAAOjC,WACP,qBAEKkC,8GA7GFf,0DAAW,8FAKVjM,EAAMiN,kBAAuB,CACjCC,aAAa,EACbC,cANFC,eASMb,EAAc1B,EAClB7K,EAAI8K,6BAMC,IAAIuB,EAAc,CACvBR,IAJIC,aAAwBS,OACFA,EAI1BrK,KAAM,iBACN4J,WAAYA,EACZhB,UAAW9K,EAAI8K,UACfS,WAAYvL,EAAIqN,8GAIbpB,sDAAO,WAAOZ,iFACeF,EAAgBE,EAAEnJ,MAAMmJ,qBACnD,IAAIgB,EAAc,CACvBR,GAAIR,EAAEQ,GACN3J,KAAMmJ,EAAEnJ,KACR4J,WAAYT,EAAES,WACdhB,YALMA,UAMNS,aANiBA,+GAvCVU,sCADZqB,sBACYrB"}