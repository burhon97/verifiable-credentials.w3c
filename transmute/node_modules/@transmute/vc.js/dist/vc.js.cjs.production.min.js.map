{"version":3,"file":"vc.js.cjs.production.min.js","sources":["../src/datetime/index.ts","../src/checkCredential.ts","../node_modules/babel-plugin-transform-async-to-promises/helpers.mjs","../src/vc-ld/CredentialIssuancePurpose.ts","../src/vc-ld/createVerifiableCredential.ts","../src/vc-ld/verifyVerifiableCredential.ts","../src/checkPresentation.ts","../src/vc-ld/createVerifiablePresentation.ts","../src/vc-jwt/getVerifierForJwt.ts","../src/vc-jwt/decodeJwt.ts","../src/vc-jwt/verifyVerifiableCredential.ts","../src/vc-ld/verifyVerifiablePresentation.ts","../src/vc-jwt/createVcPayload.ts","../src/vc-jwt/createVpPayload.ts","../src/universal/index.ts","../src/universal/credential/index.ts","../src/universal/credential/create.ts","../src/universal/credential/derive.ts","../src/universal/credential/verify.ts","../src/universal/presentation/index.ts","../src/universal/presentation/create.ts","../src/universal/presentation/verify.ts","../src/vc-jwt/createVerifiableCredential.ts","../src/vc-jwt/createVerifiablePresentation.ts","../src/vc-jwt/verifyVerifiablePresentation.ts"],"sourcesContent":["import moment from \"moment\";\n\n// thanks Mozilla... https://bugzilla.mozilla.org/attachment.cgi?id=351506&action=diff\n// Killer regex to parse RFC3339 dates\nexport const RFC_3339 = new RegExp(\n  \"^([0-9]{4})-([0-9]{2})-([0-9]{2})\" +\n    \"([Tt]([0-9]{2}):([0-9]{2}):([0-9]{2})(.[0-9]+)?)?\" +\n    \"(([Zz]|([+-])([0-9]{2}):([0-9]{2})))?\"\n);\n\n// Tweaked to allow for leap seconds\nexport const ISO_8601_FULL = /^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)([\\.,]\\d+(?!:))?)?(\\17[0-6]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$/;\n\nexport const TIME_ZONE_OFFSET_MATCH = /[+-]\\d\\d:\\d\\d$/;\n\n// https://www.w3.org/TR/NOTE-datetime-970915\nexport const isW3CDate = (datetime: string) => {\n  try {\n    const parsedDate = new Date(datetime);\n    const str = parsedDate.toISOString();\n    return str.substr(0, str.length - 5) + \"Z\" === datetime;\n  } catch (e) {\n    return false;\n  }\n};\n\n// for the sake of safety, we check the date\n// against RFC 3339 / ISO 8601 and moment.\n// see also: https://github.com/w3c/vc-data-model/issues/782\nexport const checkDate = (\n  datetime: string,\n  isJWT: boolean = false\n): { valid: boolean; warnings: string[] } => {\n  const res: { valid: boolean; warnings: string[] } = {\n    valid: false,\n    warnings: []\n  };\n\n  if (!ISO_8601_FULL.test(datetime)) {\n    res.warnings.push(`${datetime} is not a legal ISO 8601 Date Time.`);\n  }\n\n  if (!RFC_3339.test(datetime)) {\n    res.warnings.push(`${datetime} is not a legal RFC 3339 Date Time.`);\n  }\n\n  moment.suppressDeprecationWarnings = true;\n  // If leap second (60 seconds) make it a valid date\n  let newDatetime = datetime;\n  let isLeapSecond = false;\n  try {\n    if (newDatetime.split(\":\")[2].substring(0, 2) === \"60\") {\n      newDatetime = newDatetime.replace(\"60\", \"59\");\n      const newDate = new Date(newDatetime);\n      newDate.setSeconds(new Date(newDatetime).getSeconds() + 1);\n      newDatetime = newDate.toISOString();\n      isLeapSecond = true;\n    }\n  } catch (err) {}\n  if (moment(newDatetime).toISOString() === null) {\n    res.warnings.push(\n      `${datetime} could not be parsed and serialized as ISO 8601 Date Time.`\n    );\n  }\n\n  if (isJWT) {\n    if (isLeapSecond) {\n      res.warnings.push(`${datetime} lost leap second information.`);\n    }\n    if (TIME_ZONE_OFFSET_MATCH.test(datetime)) {\n      res.warnings.push(`${datetime} lost timezone offset information.`);\n    }\n    if (new Date(newDatetime).getMilliseconds()) {\n      res.warnings.push(`${datetime} lost millisecond information.`);\n    }\n  }\n  moment.suppressDeprecationWarnings = false;\n\n  res.valid = res.warnings.length === 0;\n  return res;\n};\n","import jsonld from \"jsonld\";\nimport { check } from \"@transmute/jsonld-schema\";\n\nimport { checkDate } from \"./datetime\";\n\nfunction _getId(obj: any) {\n  if (typeof obj === \"string\") {\n    return obj;\n  }\n\n  if (!(\"id\" in obj)) {\n    return;\n  }\n\n  return obj.id;\n}\n\nexport const checkCredential = async (\n  credential: any,\n  options: {\n    documentLoader: any;\n    strict?: \"ignore\" | \"warn\" | \"throw\";\n  }\n) => {\n  const { documentLoader } = options;\n  const strict = options.strict || \"warn\";\n  if (options.strict === \"ignore\") {\n    return undefined;\n  }\n\n  let isJWT = false;\n\n  if (typeof credential === \"string\") {\n    let [encodedHeader, encodedPayload] = credential.split(\".\");\n    const header = JSON.parse(Buffer.from(encodedHeader, \"base64\").toString());\n    if (!header.alg) {\n      throw new Error(\"alg is required in JWT header\");\n    }\n    const payload = JSON.parse(\n      Buffer.from(encodedPayload, \"base64\").toString()\n    );\n    credential = payload.vc;\n    isJWT = true;\n  }\n\n  if (!credential[\"@context\"]) {\n    throw new Error(\"Verifiable Credentials MUST include a @context property.\");\n  }\n\n  if (!documentLoader) {\n    throw new TypeError(\n      '\"documentLoader\" parameter is required for checking presentations.'\n    );\n  }\n\n  const isValidJsonLd = await check({ input: credential, documentLoader });\n  if (!isValidJsonLd.ok) {\n    throw new Error(\n      `credential is not valid JSON-LD: ${JSON.stringify(\n        isValidJsonLd.error,\n        null,\n        2\n      )}`\n    );\n  }\n\n  // check type presence and cardinality\n  if (!credential[\"type\"]) {\n    throw new Error('\"type\" property is required.');\n  }\n\n  if (!jsonld.getValues(credential, \"type\").includes(\"VerifiableCredential\")) {\n    throw new Error('\"type\" must include `VerifiableCredential`.');\n  }\n\n  if (!credential[\"credentialSubject\"]) {\n    throw new Error('\"credentialSubject\" property is required.');\n  }\n\n  if (!credential[\"issuer\"]) {\n    throw new Error('\"issuer\" property is required.');\n  }\n\n  // check issuanceDate cardinality\n  if (jsonld.getValues(credential, \"issuanceDate\").length > 1) {\n    throw new Error('\"issuanceDate\" property can only have one value.');\n  }\n\n  // check issued is a date\n  if (!credential[\"issuanceDate\"]) {\n    throw new Error('\"issuanceDate\" property is required.');\n  }\n\n  if (\"issuanceDate\" in credential) {\n    const res = checkDate(credential.issuanceDate, isJWT);\n    if (!res.valid) {\n      const message = [\n        \"issuanceDate is not valid: \" + JSON.stringify(res.warnings, null, 2),\n        \"issuanceDate must be XML Datestring as defined in spec: https://w3c.github.io/vc-data-model/#issuance-date\"\n      ].join(\"\\n\");\n      if (strict == \"warn\") {\n        console.warn(message);\n      }\n      if (strict == \"throw\") {\n        throw new Error(message);\n      }\n    }\n  }\n\n  // check expires is a date\n  if (\"expirationDate\" in credential) {\n    const res = checkDate(credential.expirationDate, isJWT);\n    if (!res.valid) {\n      const message = [\n        \"expirationDate is not valid: \" + JSON.stringify(res.warnings, null, 2),\n        \"expirationDate must be XML Datestring as defined in spec: https://w3c.github.io/vc-data-model/#expiration\"\n      ].join(\"\\n\");\n      if (strict == \"warn\") {\n        console.warn(message);\n      }\n      if (strict == \"throw\") {\n        throw new Error(message);\n      }\n    }\n  }\n\n  // check issuer cardinality\n  if (jsonld.getValues(credential, \"issuer\").length > 1) {\n    throw new Error('\"issuer\" property can only have one value.');\n  }\n\n  // check issuer is a URL\n  // FIXME\n  if (\"issuer\" in credential) {\n    const issuer = _getId(credential.issuer);\n    if (!issuer) {\n      throw new Error(`\"issuer\" id is required.`);\n    }\n    if (!issuer.includes(\":\")) {\n      throw new Error(`\"issuer\" id must be a URL: ${issuer}`);\n    }\n  }\n\n  if (\"credentialStatus\" in credential) {\n    if (!credential.credentialStatus.id) {\n      throw new Error('\"credentialStatus\" must include an id.');\n    }\n    if (!credential.credentialStatus.type) {\n      throw new Error('\"credentialStatus\" must include a type.');\n    }\n  }\n\n  // check evidences are URLs\n  // FIXME\n  jsonld.getValues(credential, \"evidence\").forEach((evidence: any) => {\n    const evidenceId = _getId(evidence);\n    if (evidenceId && !evidenceId.includes(\":\")) {\n      throw new Error(`\"evidence\" id must be a URL: ${evidence}`);\n    }\n  });\n  return undefined;\n};\n","// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","import * as ldp from \"@transmute/linked-data-proof\";\n// import jsonld from \"jsonld\";\n\nexport const { AssertionProofPurpose } = ldp.purposes;\n\nexport class CredentialIssuancePurpose extends AssertionProofPurpose {\n  constructor({ controller, date, maxTimestampDelta }: any = {}) {\n    super({ controller, date, maxTimestampDelta });\n  }\n\n  async validate(\n    proof: any,\n    { document, suite, verificationMethod, documentLoader, expansionMap }: any\n  ) {\n    try {\n      const result = await super.validate(proof, {\n        document,\n        suite,\n        verificationMethod,\n        documentLoader,\n        expansionMap\n      });\n\n      if (!result.valid) {\n        throw result.error;\n      }\n\n      const issuer =\n        typeof document.issuer === \"string\"\n          ? document.issuer\n          : document.issuer.id;\n\n      if (!issuer) {\n        throw new Error(\"Credential issuer is required.\");\n      }\n\n      if (result.controller.id !== issuer) {\n        throw new Error(\n          \"Credential issuer must match the verification method controller.\"\n        );\n      }\n\n      return { valid: true };\n    } catch (error) {\n      return { valid: false, error };\n    }\n  }\n}\n\nexport default CredentialIssuancePurpose;\n","import * as ldp from \"@transmute/linked-data-proof\";\n\nimport { checkCredential } from \"../checkCredential\";\nimport { CredentialIssuancePurpose } from \"./CredentialIssuancePurpose\";\n\nexport const createVerifiableCredential = async (options: {\n  credential: any;\n  suite: any;\n  documentLoader: any;\n  strict?: \"ignore\" | \"warn\" | \"throw\";\n}) => {\n  const { credential, suite, documentLoader } = options;\n\n  const strict = options.strict || \"warn\";\n\n  // run common credential checks\n  if (!credential) {\n    throw new TypeError('\"credential\" parameter is required for issuing.');\n  }\n\n  await checkCredential(credential, { documentLoader, strict });\n\n  if (!documentLoader) {\n    throw new TypeError('\"documentLoader\" parameter is required for issuing.');\n  }\n\n  if (!suite) {\n    throw new TypeError('\"suite\" parameter is required for issuing.');\n  }\n  // check to make sure the `suite` has required params\n  // Note: verificationMethod defaults to publicKey.id, in suite constructor...\n  // ...in some implementations...\n  if (!suite.verificationMethod) {\n    throw new TypeError('\"suite.verificationMethod\" property is required.');\n  }\n\n  const purpose = new CredentialIssuancePurpose();\n\n  return ldp.sign(credential, { purpose, ...options });\n};\n","import * as ldp from \"@transmute/linked-data-proof\";\n\nimport { checkCredential } from \"../checkCredential\";\nimport { CredentialIssuancePurpose } from \"./CredentialIssuancePurpose\";\n\nexport const verifyVerifiableCredential = async (options: {\n  credential: any;\n  suite: any;\n  checkStatus?: any;\n  documentLoader: any;\n  expansionMap?: boolean;\n}) => {\n  const { credential, checkStatus, documentLoader } = options;\n  const compactProof = false;\n  if (options.expansionMap !== undefined) {\n    const message = \"The default options are not being used.\";\n    throw new Error(message);\n  }\n  try {\n    if (!credential) {\n      throw new TypeError('A \"credential\" property is required for verifying.');\n    }\n\n    // run common credential checks\n    await checkCredential(credential, { documentLoader });\n\n    // if credential status is provided, a `checkStatus` function must be given\n    if (\n      credential.credentialStatus &&\n      typeof options.checkStatus !== \"function\"\n    ) {\n      throw new TypeError(\n        'A \"checkStatus\" function must be given to verify credentials with ' +\n          '\"credentialStatus\".'\n      );\n    }\n\n    const purpose = new CredentialIssuancePurpose();\n\n    const result = await ldp.verify(credential, {\n      ...options,\n      purpose,\n      compactProof\n    });\n\n    // if verification has already failed, skip status check\n    if (!result.verified) {\n      return result;\n    }\n\n    if (credential.credentialStatus) {\n      result.statusResult = await checkStatus(options);\n      if (!result.statusResult.verified) {\n        result.verified = false;\n      }\n    }\n\n    return result;\n  } catch (error) {\n    return {\n      verified: false,\n      results: [{ credential, verified: false, error }],\n      error\n    };\n  }\n};\n","import jsonld from \"jsonld\";\n// import constants from './constants';\n\nimport { checkCredential } from \"./checkCredential\";\nimport { check } from \"@transmute/jsonld-schema\";\n\nexport const checkPresentation = async (\n  presentation: any,\n  options: {\n    documentLoader: any;\n    strict: \"ignore\" | \"warn\" | \"throw\";\n    domain?: string;\n    challenge?: string;\n  }\n) => {\n  const { documentLoader, domain, challenge } = options;\n  const strict = options.strict || \"warn\";\n\n  if (typeof presentation === \"string\") {\n    let [encodedHeader, encodedPayload] = presentation.split(\".\");\n    const header = JSON.parse(Buffer.from(encodedHeader, \"base64\").toString());\n    if (!header.alg) {\n      throw new Error(\"alg is required in JWT header\");\n    }\n    const payload = JSON.parse(\n      Buffer.from(encodedPayload, \"base64\").toString()\n    );\n    presentation = payload.vp;\n    if (payload.aud) {\n      if (payload.aud !== domain) {\n        throw new Error(\n          '\"aud\" and \"domain\" does not match this verifiable presentation'\n        );\n      }\n    }\n    if (payload.nonce) {\n      if (payload.nonce !== challenge) {\n        throw new Error(\n          '\"nonce\" and \"challenge\" does not match this verifiable presentation'\n        );\n      }\n    }\n  }\n\n  if (!presentation[\"@context\"]) {\n    throw new Error(\n      \"Verifiable Presentations MUST include a @context property.\"\n    );\n  }\n\n  if (!documentLoader) {\n    throw new TypeError(\n      '\"documentLoader\" parameter is required for checking presentations.'\n    );\n  }\n\n  const isValidJsonLd = await check({ input: presentation, documentLoader });\n\n  if (!isValidJsonLd.ok) {\n    throw new Error(\n      `presentation is not valid JSON-LD: ${JSON.stringify(\n        isValidJsonLd.error,\n        null,\n        2\n      )}`\n    );\n  }\n\n  const types = jsonld.getValues(presentation, \"type\");\n\n  // check type presence\n  if (!types.includes(\"VerifiablePresentation\")) {\n    throw new Error('\"type\" must include \"VerifiablePresentation\".');\n  }\n\n  if (presentation.verifiableCredential) {\n    const credentials = Array.isArray(presentation.verifiableCredential)\n      ? presentation.verifiableCredential\n      : [presentation.verifiableCredential];\n\n    await Promise.all(\n      credentials.map(async (vc: any) => {\n        await checkCredential(vc, { documentLoader, strict });\n      })\n    );\n  }\n};\n","import * as ldp from \"@transmute/linked-data-proof\";\nimport { checkPresentation } from \"../checkPresentation\";\nexport const createVerifiablePresentation = async (options: {\n  presentation: any;\n  suite: any;\n  domain?: string;\n  challenge: string;\n  documentLoader: (\n    iri: string\n  ) => Promise<{\n    document: any;\n  }>;\n  strict?: \"ignore\" | \"warn\" | \"throw\";\n}) => {\n  const { presentation, domain, challenge, documentLoader } = options;\n\n  const strict = options.strict || \"warn\";\n\n  await checkPresentation(presentation, { documentLoader, strict });\n\n  const purpose = new ldp.purposes.AuthenticationProofPurpose({\n    domain,\n    challenge\n  });\n\n  return ldp.sign(presentation, { ...options, purpose });\n};\n","import { JsonWebKey } from \"@transmute/json-web-signature\";\nexport const getVerifierForJwt = async (jwt: string, options: any) => {\n  const [header] = jwt\n    .split(\".\")\n    .splice(0, 1)\n    .map((item: string) => {\n      return JSON.parse(Buffer.from(item, \"base64\").toString());\n    });\n  if (!header.kid) {\n    throw new Error(\n      'Transmute requires \"kid\" in vc-jwt headers. Otherwise key dereferencing is not always possible.'\n    );\n  }\n  let suite = Array.isArray(options.suite) ? options.suite[0] : options.suite;\n\n  const verificationMethod = await suite.getVerificationMethod({\n    proof: {\n      verificationMethod: header.kid\n    },\n    documentLoader: options.documentLoader,\n    instance: true // need this to get the class instance\n  });\n\n  if (!verificationMethod || !verificationMethod.useJwa) {\n    throw new Error(\n      'Transmute requires \"suite.getVerificationMethod\" to return a key instance with member useJwa.'\n    );\n  }\n\n  const k2 = await JsonWebKey.from(\n    await verificationMethod.export({ type: \"JsonWebKey2020\" }),\n    {\n      detached: false\n    }\n  );\n\n  const verifier = k2.verifier();\n  return verifier;\n};\n","export const decodeJwt = (jwt: string) => {\n  const [encodedHeader, encodedPayload, encodedSignature] = jwt.split(\".\");\n  const [header, payload] = [encodedHeader, encodedPayload].map(\n    (item: string) => {\n      return JSON.parse(Buffer.from(item, \"base64\").toString());\n    }\n  );\n  return {\n    header,\n    payload,\n    signature: encodedSignature\n  };\n};\n","import { checkCredential } from \"../checkCredential\";\n\nexport const verifyVerifiableCredential = async (\n  jwt: string,\n  options: {\n    verifier: any;\n    documentLoader: any;\n    strict?: \"ignore\" | \"warn\" | \"throw\";\n  }\n) => {\n  const { verifier, documentLoader } = options;\n  const strict = options.strict || \"warn\";\n\n  await checkCredential(jwt, { documentLoader, strict });\n  const res = await verifier.verify({\n    signature: jwt\n  });\n  return res;\n};\n","import * as ldp from \"@transmute/linked-data-proof\";\n// import jsonld from \"jsonld\";\nimport { checkPresentation } from \"../checkPresentation\";\nimport { PresentationVerification } from \"../types/PresentationVerification\";\nimport { verifyVerifiableCredential } from \"./verifyVerifiableCredential\";\nimport { getVerifierForJwt } from \"../vc-jwt/getVerifierForJwt\";\nimport { decodeJwt } from \"../vc-jwt/decodeJwt\";\nimport { verifyVerifiableCredential as verifyJwt } from \"../vc-jwt/verifyVerifiableCredential\";\nconst verifyCredentialsInPresentation = async (\n  presentation: any,\n  options: any\n) => {\n  let result: any = { verified: false };\n  const results = await Promise.all(\n    presentation.verifiableCredential.map(async (credential: any) => {\n      if (!credential[\"@context\"]) {\n        const verifier = await getVerifierForJwt(credential, options);\n        const res = await verifyJwt(credential, { ...options, verifier });\n        const decoded = decodeJwt(credential);\n        return {\n          credentialId: decoded.payload.vc.id || undefined,\n          verified: res\n        };\n      }\n      if (credential.credentialStatus && !options.checkStatus) {\n        throw new Error(\n          \"options.checkStatus is required to verify presentation of revocable credentials.\"\n        );\n      }\n      const res = await verifyVerifiableCredential({\n        credential,\n        ...options\n      });\n      return {\n        credentialId: credential.id,\n        ...res\n      };\n    })\n  );\n  result.verified = results.every((r: any) => r.verified);\n  result.results = results;\n  return result;\n};\n\nexport const verifyVerifiablePresentation = async (options: any) => {\n  const { documentLoader, domain, challenge } = options;\n  const strict = options.strict || \"warn\";\n\n  const { presentation } = options;\n\n  if (!documentLoader) {\n    throw new TypeError(\n      '\"documentLoader\" parameter is required for verifying.'\n    );\n  }\n\n  if (!presentation) {\n    throw new TypeError('A \"presentation\" property is required for verifying.');\n  }\n  try {\n    await checkPresentation(presentation, { documentLoader, strict });\n  } catch (e) {\n    return {\n      verified: false,\n      presentation: e\n    };\n  }\n\n  if (\n    (!presentation.proof && !presentation.verifiableCredential) ||\n    (presentation.verifiableCredential &&\n      presentation.verifiableCredential.length === 0)\n  ) {\n    const message =\n      'presentation MUST contain \"proof\" or \"verifiableCredential\"';\n    throw new Error(message);\n  }\n\n  if (!presentation.proof) {\n    const message = 'presentation MUST contain \"proof\" when strict';\n    if (strict == \"warn\") {\n      console.warn(message);\n    }\n    if (strict == \"throw\") {\n      throw new Error(message);\n    }\n  }\n\n  const result: PresentationVerification = {\n    verified: false\n  };\n\n  if (\n    presentation.verifiableCredential &&\n    presentation.verifiableCredential.length\n  ) {\n    const credentials = await verifyCredentialsInPresentation(\n      presentation,\n      options\n    );\n    result.credentials = credentials;\n    if (!credentials.verified) {\n      result.verified = false;\n    }\n  }\n\n  if (presentation.proof) {\n    const purpose = new ldp.purposes.AuthenticationProofPurpose({\n      domain,\n      challenge\n    });\n    const verification = await ldp.verify(presentation, {\n      ...options,\n      purpose\n    });\n    result.presentation = verification;\n  } else {\n    result.presentation = result.credentials;\n  }\n\n  if (result.presentation && !result.credentials) {\n    result.verified = result.presentation.verified;\n  }\n\n  if (result.presentation && result.credentials) {\n    result.verified =\n      result.presentation.verified && result.credentials.verified;\n  }\n  return result;\n};\n","import moment from \"moment\";\nimport { checkCredential } from \"../checkCredential\";\n\nexport const createVcPayload = async (\n  credential: any,\n  options: {\n    documentLoader: any;\n    strict?: \"ignore\" | \"warn\" | \"throw\";\n  }\n) => {\n  const { documentLoader } = options;\n  const strict = options.strict || \"warn\";\n\n  if (!credential.issuer) {\n    throw new Error(\"Issuer is a required field.\");\n  }\n\n  await checkCredential(credential, { documentLoader, strict });\n\n  const issuer = credential.issuer.id\n    ? credential.issuer.id\n    : credential.issuer;\n  const subject = credential.credentialSubject.id\n    ? credential.credentialSubject.id\n    : credential.credentialSubject;\n  const payload: any = {\n    iss: issuer,\n    sub: subject,\n    vc: credential,\n    jti: credential.id,\n    nbf: moment(credential.issuanceDate).unix()\n  };\n  if (credential.expirationDate) {\n    payload.exp = moment(credential.expirationDate).unix();\n  }\n  return payload;\n};\n","import { checkPresentation } from \"../checkPresentation\";\n\nexport const createVpPayload = async (\n  presentation: any,\n  options: {\n    documentLoader: any;\n    domain?: string;\n    challenge: string;\n    strict?: \"ignore\" | \"warn\" | \"throw\";\n  }\n) => {\n  const { documentLoader, domain, challenge } = options;\n  const strict = options.strict || \"warn\";\n\n  if (!challenge) {\n    throw new Error(\n      '\"challenge\" is required to create verifiable presentations (it will be used for the \"nonce\" value)'\n    );\n  }\n\n  await checkPresentation(presentation, {\n    documentLoader,\n    strict,\n    domain,\n    challenge\n  });\n\n  const payload: any = {};\n\n  if (presentation.holder) {\n    const holder = presentation.holder.id\n      ? presentation.holder.id\n      : presentation.holder;\n\n    payload.iss = holder;\n    payload.sub = holder;\n  }\n\n  payload.vp = presentation;\n\n  if (domain) {\n    payload.aud = domain;\n  }\n\n  if (challenge) {\n    payload.nonce = challenge;\n  }\n  return payload;\n};\n","import { credential } from \"./credential\";\nimport { presentation } from \"./presentation\";\n\nimport { decodeJwt } from \"../vc-jwt/decodeJwt\";\n\nconst jwt = {\n  decode: decodeJwt\n};\n\nexport const verifiable = { credential, presentation, jwt };\n","import { create } from \"./create\";\nimport { derive } from \"./derive\";\nimport { verify } from \"./verify\";\n\nexport const credential = {\n  create,\n  derive,\n  verify\n};\n","import * as ld from \"../../vc-ld\";\nimport * as jwt from \"../../vc-jwt\";\n\nimport { CreateCredentialOptions, CreateCredentialResult } from \"../../types\";\nimport { JsonWebKey } from \"@transmute/json-web-signature\";\nexport const create = async (\n  options: CreateCredentialOptions\n): Promise<CreateCredentialResult> => {\n  const result: CreateCredentialResult = {\n    items: []\n  };\n\n  if (!options.format) {\n    options.format = [\"vc\"];\n  }\n\n  if (options.format.includes(\"vc\")) {\n    result.items.push(\n      await ld.createVerifiableCredential({\n        credential: options.credential,\n        suite: options.suite,\n        documentLoader: options.documentLoader\n      })\n    );\n  }\n  if (options.format.includes(\"vc-jwt\")) {\n    const suite = Array.isArray(options.suite)\n      ? options.suite[0]\n      : options.suite;\n    const { key } = suite;\n    if (!key || !key.useJwa) {\n      throw new Error(\n        \"Cannot create credential when suite does not contain a key that supports useJwa.\"\n      );\n    }\n    const k2 = await JsonWebKey.from(\n      await (key as any).export({ type: \"JsonWebKey2020\", privateKey: true }),\n      {\n        detached: false,\n        header: {\n          kid: key.id\n        }\n      }\n    );\n    const signer = k2.signer();\n    const payload: any = await jwt.createVcPayload(options.credential, options);\n    result.items.push(await signer.sign({ data: payload }));\n  }\n  return result;\n};\n","import { DeriveCredentialOptions, DeriveCredentialResult } from \"../../types\";\n\nexport const derive = async (\n  options: DeriveCredentialOptions\n): Promise<DeriveCredentialResult> => {\n  const result: DeriveCredentialResult = {\n    items: []\n  };\n\n  if (!options.format) {\n    options.format = [\"vc\"];\n  }\n\n  const { credential, frame, suite, documentLoader } = options;\n\n  const { proof, ...document } = credential;\n\n  if (!suite.deriveProof) {\n    throw new Error(\"Suite requires deriveProof\");\n  }\n\n  const derivationResult = await suite.deriveProof({\n    document: document,\n    proof: { ...proof, \"@context\": document[\"@context\"] },\n    revealDocument: frame,\n    documentLoader\n  });\n  const derivedCredential = {\n    ...derivationResult.document,\n    proof: derivationResult.proof\n  };\n  delete derivedCredential.proof[\"@context\"];\n  result.items.push(derivedCredential);\n  return result;\n};\n","import * as ld from \"../../vc-ld\";\nimport { VerifyCredentialOptions, VerificationResult } from \"../../types\";\nimport { getVerifierForJwt } from \"../../vc-jwt/getVerifierForJwt\";\nexport const verify = async (\n  options: VerifyCredentialOptions\n): Promise<VerificationResult> => {\n  const result: VerificationResult = {\n    verified: false\n  };\n\n  if (!options.format) {\n    options.format = [\"vc\"];\n  }\n\n  if (\n    options.format.includes(\"vc\") &&\n    (options.credential as any)[\"@context\"]\n  ) {\n    const res = await ld.verifyVerifiableCredential({\n      credential: options.credential,\n      suite: options.suite,\n      documentLoader: options.documentLoader,\n      checkStatus: options.checkStatus,\n      expansionMap: options.expansionMap\n    });\n    result.verified = res.verified;\n    if (!result.verified) {\n      result.error = [];\n      if (res && res.statusResult && !res.statusResult.verified) {\n        result.error.push({\n          statusResult: res.statusResult\n        });\n      }\n      if (res && res.results[0] && !res.results[0].verified) {\n        result.error.push({ proofResult: res.results[0].verified });\n      }\n      if (res.error) {\n        result.error.push(res.error);\n      }\n    }\n  }\n\n  // vc-jwt's are strings with an encoded vc member that conforms to the data model\n  if (\n    options.format.includes(\"vc-jwt\") &&\n    !(options.credential as any)[\"@context\"]\n  ) {\n    const verifier = await getVerifierForJwt(\n      options.credential as string,\n      options\n    );\n    const verified = await verifier.verify({\n      signature: options.credential\n    });\n    result.verified = verified;\n  }\n\n  return result;\n};\n","import { create } from \"./create\";\nimport { verify } from \"./verify\";\n\nexport const presentation = {\n  create,\n  verify\n};\n","import * as ld from \"../../vc-ld\";\nimport * as jwt from \"../../vc-jwt\";\nimport {\n  CreateVerifiablePresentationOptions,\n  CreatePresentationResult\n} from \"../../types\";\nimport { JsonWebKey } from \"@transmute/json-web-signature\";\nexport const create = async (\n  options: CreateVerifiablePresentationOptions\n): Promise<CreatePresentationResult> => {\n  const result: CreatePresentationResult = {\n    items: []\n  };\n\n  if (!options.format) {\n    options.format = [\"vp\"];\n  }\n\n  if (options.format.includes(\"vp\")) {\n    result.items.push(\n      await ld.createVerifiablePresentation({\n        presentation: options.presentation,\n        suite: options.suite,\n        domain: options.domain,\n        challenge: options.challenge,\n        documentLoader: options.documentLoader\n      })\n    );\n  }\n  if (options.format.includes(\"vp-jwt\")) {\n    const suite = Array.isArray(options.suite)\n      ? options.suite[0]\n      : options.suite;\n\n    const { key } = suite;\n\n    if (!key || !key.useJwa) {\n      throw new Error(\n        \"Cannot create credential when suite does not contain a key that supports useJwa.\"\n      );\n    }\n    const k2 = await JsonWebKey.from(\n      await (key as any).export({ type: \"JsonWebKey2020\", privateKey: true }),\n      {\n        detached: false,\n        header: {\n          kid: key.id\n        }\n      }\n    );\n    const signer = k2.signer();\n    const payload: any = await jwt.createVpPayload(\n      options.presentation,\n      options\n    );\n    result.items.push(await signer.sign({ data: payload }));\n  }\n\n  return result;\n};\n","import * as ld from \"../../vc-ld\";\n\nimport { VerifyPresentationOptions, VerificationResult } from \"../../types\";\nimport { getVerifierForJwt } from \"../../vc-jwt/getVerifierForJwt\";\n\nexport const verify = async (\n  options: VerifyPresentationOptions\n): Promise<VerificationResult> => {\n  const result: any = {\n    verified: false\n  };\n\n  if (!options.format) {\n    options.format = [\"vp\"];\n  }\n\n  if (\n    options.format.includes(\"vp\") &&\n    (options.presentation as any)[\"@context\"]\n  ) {\n    return ld.verifyVerifiablePresentation({\n      presentation: options.presentation,\n      suite: options.suite,\n      domain: options.domain,\n      challenge: options.challenge,\n      checkStatus: options.checkStatus,\n      documentLoader: options.documentLoader\n    });\n  }\n\n  // vp-jwt's are strings with an encoded vp member that conforms to the data model\n  if (\n    options.format.includes(\"vp-jwt\") &&\n    !(options.presentation as any)[\"@context\"]\n  ) {\n    const verifier = await getVerifierForJwt(\n      options.presentation as string,\n      options\n    );\n    const verified = await verifier.verify({\n      signature: options.presentation\n    });\n    result.verified = verified;\n  }\n\n  return result;\n};\n","import { createVcPayload } from \"./createVcPayload\";\n\nexport const createVerifiableCredential = async (\n  credential: any,\n  options: {\n    signer: any;\n    documentLoader: any;\n    strict?: \"ignore\" | \"warn\" | \"throw\";\n  }\n) => {\n  const { signer } = options;\n  const payload: any = await createVcPayload(credential, options);\n  const jwt = await signer.sign({ data: payload });\n  return jwt;\n};\n","import { createVpPayload } from \"./createVpPayload\";\n\nexport const createVerifiablePresentation = async (\n  presentation: any,\n  options: {\n    domain?: string;\n    challenge: string;\n    signer: any;\n    documentLoader: any;\n    strict?: \"ignore\" | \"warn\" | \"throw\";\n  }\n) => {\n  const { signer } = options;\n  const payload = await createVpPayload(presentation, options);\n  const jwt = await signer.sign({ data: payload });\n  return jwt;\n};\n","import { checkPresentation } from \"../checkPresentation\";\n\nexport const verifyVerifiablePresentation = async (\n  jwt: string,\n  options: {\n    domain?: string;\n    challenge: string;\n    verifier: any;\n    documentLoader: any;\n    strict?: \"ignore\" | \"warn\" | \"throw\";\n  }\n) => {\n  const { verifier, documentLoader, domain, challenge } = options;\n  const strict = options.strict || \"warn\";\n\n  await checkPresentation(jwt, { documentLoader, strict, domain, challenge });\n  const res = await verifier.verify({\n    signature: jwt\n  });\n  return res;\n};\n"],"names":["RFC_3339","RegExp","ISO_8601_FULL","TIME_ZONE_OFFSET_MATCH","checkDate","datetime","isJWT","res","valid","warnings","test","push","moment","suppressDeprecationWarnings","newDatetime","isLeapSecond","split","substring","replace","newDate","Date","setSeconds","getSeconds","toISOString","err","getMilliseconds","length","_getId","obj","id","checkCredential","credential","options","documentLoader","strict","undefined","encodedPayload","JSON","parse","Buffer","from","toString","alg","Error","payload","vc","TypeError","check","input","isValidJsonLd","ok","stringify","error","jsonld","getValues","includes","issuanceDate","message","join","console","warn","expirationDate","issuer","credentialStatus","type","forEach","evidence","evidenceId","_catch","body","recover","result","e","then","Symbol","iterator","asyncIterator","CredentialIssuancePurpose","_AssertionProofPurpos","controller","date","maxTimestampDelta","validate","proof","document","suite","verificationMethod","expansionMap","ldp","AssertionProofPurpose","createVerifiableCredential","purpose","verifyVerifiableCredential","checkStatus","compactProof","verified","statusResult","results","checkPresentation","presentation","domain","challenge","vp","aud","nonce","verifiableCredential","credentials","Array","isArray","Promise","all","map","createVerifiablePresentation","AuthenticationProofPurpose","getVerifierForJwt","jwt","header","splice","item","kid","getVerificationMethod","instance","useJwa","JsonWebKey","detached","k2","verifier","decodeJwt","encodedSignature","signature","verify","verifyVerifiablePresentation","verification","credentialId","verifyJwt","decoded","every","r","verifyCredentialsInPresentation","createVcPayload","iss","sub","credentialSubject","jti","nbf","unix","exp","createVpPayload","holder","verifiable","create","format","key","privateKey","signer","items","_result$items2","sign","data","_result$items3","ld","derive","frame","deriveProof","revealDocument","derivationResult","derivedCredential","proofResult","decode"],"mappings":"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"}