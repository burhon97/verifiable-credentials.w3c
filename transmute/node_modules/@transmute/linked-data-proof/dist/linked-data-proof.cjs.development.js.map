{"version":3,"file":"linked-data-proof.cjs.development.js","sources":["../src/purposes/ProofPurpose.ts","../node_modules/babel-plugin-transform-async-to-promises/helpers.js","../src/purposes/ControllerProofPurpose.ts","../src/purposes/AssertionProofPurpose.ts","../src/purposes/AuthenticationProofPurpose.ts","../src/purposes/index.ts","../src/strictExpansionMap.ts","../src/ProofSet.ts","../src/sign.ts","../src/VerificationError.ts","../src/verify.ts"],"sourcesContent":["import { IPurposeValidateOptions } from \"../types\";\n\nexport class ProofPurpose {\n  public term: any;\n  public date: any;\n  public maxTimestampDelta: any;\n\n  constructor({ term, date, maxTimestampDelta = Infinity }: any = {}) {\n    if (term === undefined) {\n      throw new Error('\"term\" is required.');\n    }\n    if (\n      maxTimestampDelta !== undefined &&\n      typeof maxTimestampDelta !== \"number\"\n    ) {\n      throw new TypeError('\"maxTimestampDelta\" must be a number.');\n    }\n    this.term = term;\n    if (date !== undefined) {\n      this.date = new Date(date);\n      if (isNaN(this.date)) {\n        throw TypeError(`\"date\" \"${date}\" is not a valid date.`);\n      }\n    }\n    this.maxTimestampDelta = maxTimestampDelta;\n  }\n\n  async validate(proof: any, _options: IPurposeValidateOptions) {\n    try {\n      // check expiration\n      if (this.maxTimestampDelta !== Infinity) {\n        const expected = (this.date || new Date()).getTime();\n        const delta = this.maxTimestampDelta * 1000;\n        const created = new Date(proof.created).getTime();\n        // comparing this way handles NaN case where `created` is invalid\n        if (!(created >= expected - delta && created <= expected + delta)) {\n          throw new Error(\"The proof's created timestamp is out of range.\");\n        }\n      }\n      return { valid: true };\n    } catch (error) {\n      return { valid: false, error };\n    }\n  }\n\n  /**\n   * Called to update a proof when it is being created, adding any properties\n   * specific to this purpose. This method is called prior to the proof\n   * value being generated such that any properties added may be, for example,\n   * included in a digital signature value.\n   *\n   * @param proof {object} the proof, in the `constants.SECURITY_CONTEXT_URL`\n   *   to update.\n   *\n   * @return {Promise<object>} resolves to the proof instance (in the\n   *   `constants.SECURITY_CONTEXT_URL`.\n   */\n  async update(proof: any, _options: IPurposeValidateOptions) {\n    proof.proofPurpose = this.term;\n    return proof;\n  }\n\n  /**\n   * Determines if the given proof has a purpose that matches this instance,\n   * i.e. this ProofPurpose instance should be used to validate the given\n   * proof.\n   *\n   * @param proof {object} the proof to check.\n   *\n   * @return {Promise<boolean>} `true` if there's a match, `false` if not.\n   */\n  async match(\n    proof: any\n    // { document, documentLoader, expansionMap }\n  ) {\n    return proof.proofPurpose === this.term;\n  }\n}\n","// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","import { ProofPurpose } from \"./ProofPurpose\";\nimport { IPurposeValidateOptions } from \"../types\";\nimport jsonld from \"jsonld\";\n\nexport class ControllerProofPurpose extends ProofPurpose {\n  public controller: any;\n  constructor({ term, date, maxTimestampDelta = Infinity }: any = {}) {\n    super({ term, date, maxTimestampDelta });\n  }\n\n  async validate(proof: any, _options: IPurposeValidateOptions) {\n    try {\n      const result: any = await super.validate(proof, _options);\n      if (!result.valid) {\n        throw result.error;\n      }\n\n      const { verificationMethod, documentLoader } = _options;\n      const { id: verificationId } = verificationMethod;\n\n      const { controller } = verificationMethod;\n      const { id: controllerId } = controller;\n\n      const { document } = await documentLoader(controllerId);\n      result.controller = document;\n      const verificationMethods = jsonld.getValues(\n        result.controller,\n        this.term\n      );\n\n      result.valid = verificationMethods.some(\n        (vm: any) =>\n          vm === verificationId ||\n          vm === \"#\" + verificationId.split(\"#\").pop() ||\n          (typeof vm === \"object\" && vm.id === verificationId)\n      );\n\n      if (!result.valid) {\n        throw new Error(\n          `Verification method \"${verificationMethod.id}\" not authorized ` +\n            `by controller for proof purpose \"${this.term}\".`\n        );\n      }\n      return result;\n    } catch (error) {\n      return { valid: false, error };\n    }\n  }\n}\n","import { ControllerProofPurpose } from \"./ControllerProofPurpose\";\n\nexport class AssertionProofPurpose extends ControllerProofPurpose {\n  constructor({\n    term = \"assertionMethod\",\n    controller,\n    date,\n    maxTimestampDelta = Infinity\n  }: any = {}) {\n    super({ term, controller, date, maxTimestampDelta });\n  }\n}\n","import { ControllerProofPurpose } from \"./ControllerProofPurpose\";\nimport { IPurposeValidateOptions } from \"../types\";\n\nexport class AuthenticationProofPurpose extends ControllerProofPurpose {\n  public challenge: string;\n  public domain: string;\n  constructor({\n    term = \"authentication\",\n    controller,\n    challenge,\n    date,\n    domain,\n    maxTimestampDelta = Infinity\n  }: any = {}) {\n    super({ term, controller, date, maxTimestampDelta });\n    if (typeof challenge !== \"string\") {\n      throw new TypeError('\"challenge\" must be a string.');\n    }\n    if (domain !== undefined && typeof domain !== \"string\") {\n      throw new TypeError('\"domain\" must be a string.');\n    }\n    this.challenge = challenge;\n    this.domain = domain;\n  }\n\n  async validate(\n    proof: any,\n    {\n      verificationMethod,\n      documentLoader,\n      expansionMap\n    }: IPurposeValidateOptions\n  ) {\n    try {\n      // check challenge\n      if (proof.challenge !== this.challenge) {\n        throw new Error(\n          \"The challenge is not as expected; \" +\n            `challenge=\"${proof.challenge}\", expected=\"${this.challenge}\"`\n        );\n      }\n\n      // check domain\n      if (this.domain !== undefined && proof.domain !== this.domain) {\n        throw new Error(\n          \"The domain is not as expected; \" +\n            `domain=\"${proof.domain}\", expected=\"${this.domain}\"`\n        );\n      }\n\n      return super.validate(proof, {\n        verificationMethod,\n        documentLoader,\n        expansionMap\n      });\n    } catch (error) {\n      return { valid: false, error };\n    }\n  }\n\n  async update(proof: any, _options: IPurposeValidateOptions) {\n    proof = await super.update(proof, _options);\n    proof.challenge = this.challenge;\n    if (this.domain !== undefined) {\n      proof.domain = this.domain;\n    }\n    return proof;\n  }\n}\n","import { ProofPurpose } from \"./ProofPurpose\";\nimport { ControllerProofPurpose } from \"./ControllerProofPurpose\";\nimport { AssertionProofPurpose } from \"./AssertionProofPurpose\";\nimport { AuthenticationProofPurpose } from \"./AuthenticationProofPurpose\";\n\nexport const purposes = {\n  ProofPurpose,\n  ControllerProofPurpose,\n  AssertionProofPurpose,\n  AuthenticationProofPurpose\n};\n","// strict expansion map disallows dropping properties when expanding by default\nexport default (info: any) => {\n  if (info.unmappedProperty) {\n    throw new Error(\n      `The property \"${info.unmappedProperty}\" in the input was not defined in the context.`\n    );\n  }\n};\n","import jsonld from \"jsonld\";\nimport { serializeError } from \"serialize-error\";\n\nimport strictExpansionMap from \"./strictExpansionMap\";\n\nimport { IProofSetAddOptions } from \"./types\";\n\nexport class ProofSet {\n  async add(\n    document: any,\n    {\n      suite,\n      purpose,\n      documentLoader,\n      expansionMap,\n      compactProof = true\n    }: IProofSetAddOptions = { compactProof: true }\n  ) {\n    if (!suite) {\n      throw new TypeError('\"options.suite\" is required.');\n    }\n    if (!documentLoader) {\n      throw new TypeError('\"options.documentLoader\" is required.');\n    }\n    if (!purpose) {\n      throw new TypeError('\"options.purpose\" is required.');\n    }\n\n    if (suite.legacy) {\n      throw new TypeError(`Legacy suites are no longer supported.`);\n    }\n\n    if (expansionMap !== false) {\n      expansionMap = strictExpansionMap;\n    }\n\n    if (typeof document === \"string\") {\n      // fetch document\n      document = await documentLoader(document);\n    }\n\n    // preprocess document to prepare to remove existing proofs\n    let input = { ...document };\n\n    // save but exclude any existing proof(s)\n    const proofProperty = \"proof\";\n    //const existingProofs = input[proofProperty];\n    delete input[proofProperty];\n\n    const proof = await suite.createProof({\n      document: input,\n      purpose,\n      documentLoader,\n      expansionMap,\n      compactProof\n    });\n\n    delete proof[\"@context\"];\n    // this is required here, for cases where the suite\n    // still requires / uses sec-v2... like bbs+\n    proof.type = proof.type.replace(\"sec:\", \"\");\n    jsonld.addValue(document, proofProperty, proof);\n\n    return document;\n  }\n\n  private _getProofs = async ({\n    document,\n    documentLoader,\n    expansionMap,\n    compactProof\n  }: any) => {\n    // handle document preprocessing to find proofs\n    const proofProperty = \"proof\";\n    let proofSet;\n\n    if (compactProof) {\n      // if we must compact the proof(s) then we must first compact the input\n      // document to find the proof(s)\n      const context = document[\"@context\"];\n      // console.log(document);\n      document = await jsonld.compact(document, context, {\n        documentLoader,\n        expansionMap,\n        compactToRelative: false\n      });\n    }\n    proofSet = jsonld.getValues(document, proofProperty);\n    delete document[proofProperty];\n\n    if (proofSet.length === 0) {\n      // no possible matches\n      throw new Error(\"No matching proofs found in the given document.\");\n    }\n\n    const secV2Locked = [\"BbsBlsSignatureProof2020\"];\n    // TODO: consider in-place editing to optimize\n    const context = document[\"@context\"];\n    proofSet = proofSet.map((proof: any) => ({\n      // this is required because of...\n      // https://github.com/mattrglobal/jsonld-signatures-bbs/blob/master/src/BbsBlsSignatureProof2020.ts#L32\n      // A seperate implementation is probably advisable.\n      \"@context\": secV2Locked.includes(proof.type)\n        ? [\"https://w3id.org/security/v2\"]\n        : context,\n      ...proof\n    }));\n\n    return { proofSet, document };\n  };\n\n  private _verify = async ({\n    document,\n    suites,\n    proofSet,\n    purpose,\n    documentLoader,\n    expansionMap,\n    compactProof\n  }: any) => {\n    // filter out matching proofs\n    const result = await Promise.all(\n      proofSet.map((proof: any) =>\n        purpose.match(proof, { document, documentLoader, expansionMap })\n      )\n    );\n    const matches = proofSet.filter((_value: any, index: any) => result[index]);\n    if (matches.length === 0) {\n      // no matches, nothing to verify\n      return [];\n    }\n\n    // verify each matching proof\n    return (\n      await Promise.all(\n        matches.map(async (proof: any) => {\n          for (const s of suites) {\n            // Previously we used s.matchProof\n            // since issues were reported here:\n            // https://github.com/digitalbazaar/jsonld-signatures/issues/143\n            // https://github.com/mattrglobal/jsonld-signatures-bbs/issues/139\n            // we think matchProof should be a simply string comparison here...\n            // and no support for the \"expanded\" proofs should be provided...\n            const matchFound = s.type.replace(\"sec:\", \"\") === proof.type;\n\n            if (matchFound) {\n              return s\n                .verifyProof({\n                  proof,\n                  document,\n                  purpose,\n                  documentLoader,\n                  expansionMap,\n                  compactProof\n                })\n                .catch((error: any) => ({ verified: false, error }));\n            }\n          }\n        })\n      )\n    )\n      .map((r: any, i) => {\n        if (!r) {\n          return null;\n        }\n        if (r.error) {\n          this._addToJSON(r.error);\n        }\n        return { proof: matches[i], ...r };\n      })\n      .filter(r => r);\n  };\n\n  private _addToJSON = (error: any) => {\n    Object.defineProperty(error, \"toJSON\", {\n      value: function() {\n        return serializeError(this);\n      },\n      configurable: true,\n      writable: true\n    });\n  };\n\n  public verify = async (\n    document: any,\n    {\n      suite,\n      purpose,\n      documentLoader,\n      expansionMap,\n      // digital bazaar doesn't have this option as of version 8.0.0\n      // https://github.com/digitalbazaar/jsonld-signatures/blob/9a665c5b712ca997b9ca8205de11fb6f6ae15fe0/CHANGELOG.md#removed\n      compactProof = false\n    }: any = {}\n  ) => {\n    if (!suite) {\n      throw new TypeError('\"options.suite\" is required.');\n    }\n    if (!purpose) {\n      throw new TypeError('\"options.purpose\" is required.');\n    }\n    const suites = Array.isArray(suite) ? suite : [suite];\n    if (suites.length === 0) {\n      throw new TypeError(\"At least one suite is required.\");\n    }\n    const legacy = suites.some(s => s.legacy);\n    if (legacy) {\n      throw new TypeError(`Legacy suites are no longer supported.`);\n    }\n\n    if (!documentLoader) {\n      throw new TypeError('\"options.documentLoader\" is required.');\n    }\n    if (expansionMap !== false) {\n      expansionMap = strictExpansionMap;\n    }\n\n    try {\n      if (typeof document === \"string\") {\n        // fetch document\n        document = await documentLoader(document);\n      } else {\n        // never mutate function arguments.\n        document = JSON.parse(JSON.stringify(document));\n      }\n\n      // get proofs from document\n      const { proofSet, document: doc } = await this._getProofs({\n        document,\n        documentLoader,\n        expansionMap,\n        compactProof\n      });\n\n      document = doc;\n\n      // verify proofs\n      const results = await this._verify({\n        document,\n        suites,\n        proofSet,\n        purpose,\n        documentLoader,\n        expansionMap,\n        compactProof\n      });\n\n      if (results.length === 0) {\n        throw new Error(\n          \"Could not verify any proofs; no proofs matched the required \" +\n            \"suite and purpose.\"\n        );\n      }\n\n      // combine results\n      const verified = results.some(r => r.verified);\n      if (!verified) {\n        const errors = [].concat(\n          ...results.filter(r => r.error).map(r => r.error)\n        );\n        const result: any = { verified, results };\n        if (errors.length > 0) {\n          result.error = errors;\n        }\n        return result;\n      }\n      return { verified, results };\n    } catch (error) {\n      this._addToJSON(error);\n      return { verified: false, error };\n    }\n  };\n}\n","import { ProofSet } from \"./ProofSet\";\n\nimport { ISignOptions } from \"./types\";\n\nexport const sign = async (\n  document: any,\n  {\n    suite,\n    purpose,\n    documentLoader,\n    expansionMap,\n    compactProof\n  }: ISignOptions = {\n    compactProof: true\n  }\n) => {\n  try {\n    return await new ProofSet().add(document, {\n      suite,\n      purpose,\n      documentLoader,\n      expansionMap,\n      compactProof\n    });\n  } catch (e) {\n    if (!documentLoader && e.name === \"jsonld.InvalidUrl\") {\n      const {\n        details: { url }\n      } = e;\n      const err: any = new Error(\n        `A URL \"${url}\" could not be fetched;` +\n          `you need to pass \"documentLoader\" or resolve the URL before calling \"sign\".`\n      );\n      err.cause = e;\n      throw err;\n    }\n    throw e;\n  }\n};\n","export class VerificationError extends Error {\n  public errors: any[];\n  constructor(errors: any) {\n    super(\"Verification error(s).\");\n\n    this.name = \"VerificationError\";\n    this.errors = [].concat(errors);\n  }\n}\n","import { ProofSet } from \"./ProofSet\";\nimport { VerificationError } from \"./VerificationError\";\nimport { IVerifyOptions } from \"./types\";\nexport const verify = async (\n  document: any,\n  {\n    suite,\n    purpose,\n    documentLoader,\n    expansionMap,\n    compactProof\n  }: IVerifyOptions = {}\n) => {\n  const result = await new ProofSet().verify(document, {\n    suite,\n    purpose,\n    documentLoader,\n    expansionMap,\n    compactProof\n  });\n  const { error } = result;\n  if (error) {\n    if (!documentLoader && error.name === \"jsonld.InvalidUrl\") {\n      const {\n        details: { url }\n      } = error;\n      const urlError = new Error(\n        `A URL \"${url}\" could not be fetched; you need to pass ` +\n          '\"documentLoader\" or resolve the URL before calling \"verify\".'\n      );\n      result.error = new VerificationError(urlError);\n    } else {\n      result.error = new VerificationError(error);\n    }\n  }\n  return result;\n};\n"],"names":["ProofPurpose","term","date","maxTimestampDelta","Infinity","undefined","Error","TypeError","Date","isNaN","validate","proof","_options","expected","getTime","delta","created","valid","error","update","proofPurpose","match","ControllerProofPurpose","result","verificationMethod","documentLoader","verificationId","id","controller","controllerId","document","verificationMethods","jsonld","getValues","some","vm","split","pop","AssertionProofPurpose","AuthenticationProofPurpose","challenge","domain","expansionMap","purposes","info","unmappedProperty","ProofSet","compactProof","proofSet","proofProperty","length","secV2Locked","context","map","includes","type","compact","compactToRelative","suites","purpose","Promise","all","matches","filter","_value","index","s","matchFound","replace","verifyProof","verified","r","i","_addToJSON","Object","defineProperty","value","serializeError","configurable","writable","suite","Array","isArray","legacy","strictExpansionMap","_getProofs","doc","_verify","results","errors","concat","JSON","parse","stringify","add","input","createProof","addValue","sign","e","name","url","details","err","cause","VerificationError","verify","urlError"],"mappings":"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"}