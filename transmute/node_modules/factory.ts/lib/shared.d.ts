export declare type RecPartial<T> = {
    [P in keyof T]?: RecPartial<T[P]>;
};
export declare type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;
export declare function recursivePartialOverride<U>(x: U, y: RecPartial<U>): U;
export declare function uniq<T>(ts: Array<T>): Array<T>;
