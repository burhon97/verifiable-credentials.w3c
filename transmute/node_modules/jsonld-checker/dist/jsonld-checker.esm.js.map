{"version":3,"file":"jsonld-checker.esm.js","sources":["../src/CheckResult.ts","../src/defaultDocumentLoader.ts","../src/check.ts","../src/github.ts","../src/utils.ts"],"sourcesContent":["class CheckResult {\n  ok: boolean;\n\n  error?: {\n    type: string;\n    details: string;\n  };\n\n  constructor(ok: boolean, type = '', details = '') {\n    this.ok = ok;\n    this.error = {\n      type,\n      details,\n    };\n  }\n}\n\nexport default CheckResult;\n","import jsonld from 'jsonld';\n\nconst CONTEXTS = {};\n\n// From https://github.com/flexdinesh/browser-or-node/blob/master/src/index.js\nconst isNode =\n  typeof process !== 'undefined' &&\n  process.versions != null &&\n  process.versions.node != null;\n\nconst nodeDocumentLoader = isNode\n  ? (jsonld as any).documentLoaders.node()\n  : (jsonld as any).documentLoaders.xhr();\n\n// change the default document loader\nconst defaultLoader = async (url: string) => {\n  if (url in CONTEXTS) {\n    return {\n      contextUrl: null,\n      document: CONTEXTS[url],\n      documentUrl: url,\n    };\n  }\n  const res = await nodeDocumentLoader(url);\n  CONTEXTS[url] = res.document;\n  return res;\n};\n\nexport default defaultLoader;\n","import jsonld from 'jsonld';\nimport CheckResult from './CheckResult';\nimport defaultLoader from './defaultDocumentLoader';\n\n// const isNotJsonLdPropery = property => !['@id', '@type'].includes(property);\n\nconst check = async (\n  jsonldDocument: string | object,\n  documentLoader = defaultLoader\n) => {\n  try {\n    let jsonldDoc: object;\n    if (typeof jsonldDocument === 'string') {\n      jsonldDoc = JSON.parse(jsonldDocument);\n    } else {\n      jsonldDoc = jsonldDocument;\n    }\n\n    const unmappedProperties: string[] = [];\n\n    const expansionMap = info => {\n      if (info) {\n        if (info.activeProperty) {\n          unmappedProperties.push(\n            `${info.activeProperty}.${info.unmappedProperty}`\n          );\n        } else if (info.unmappedProperty) {\n          unmappedProperties.push(info.unmappedProperty);\n        }\n      }\n    };\n\n    // Remove all keys not present in the jsonld context\n    const expanded = await jsonld.expand(jsonldDoc, {\n      documentLoader,\n      expansionMap,\n    });\n    await jsonld.compact(expanded, jsonldDoc['@context'], { documentLoader });\n\n    if (unmappedProperties.length === 0) {\n      return new CheckResult(true);\n    }\n    return new CheckResult(\n      false,\n      'MISSING_PROPERTIES_IN_CONTEXT',\n      JSON.stringify(unmappedProperties)\n    );\n  } catch (err) {\n    return new CheckResult(false, err.name, err.message);\n  }\n};\n\nexport default check;\n","const fetch = require('node-fetch');\n\nconst githubApi = async endpoint => {\n  return fetch(`https://api.github.com/repos/${endpoint}`).then(res =>\n    res.json()\n  );\n};\n\nconst getFiles = async (user, repo, ref = 'HEAD') => {\n  const all = await githubApi(`${user}/${repo}/git/trees/${ref}?recursive=1`);\n  const files = all.tree.filter(node => node.type === 'blob');\n  return files;\n};\n\nexport default getFiles;\n","const getAllOpenBrackets = (text: string) => {\n  const results: number[] = [];\n  for (let cursor = 0; cursor < text.length; cursor += 1) {\n    if (text[cursor] === '{') {\n      results.push(cursor);\n    }\n  }\n  return results;\n};\n\nconst getStringUntilMatchingBracket = (\n  text: string,\n  openBracketIndex: number\n) => {\n  let substring = text[openBracketIndex];\n  if (substring !== '{') {\n    throw new Error('start must be the index of an opening bracket');\n  }\n  let bracketCount = 1;\n  let cursor = openBracketIndex + 1;\n  const { length } = text;\n  while (bracketCount !== 0 && cursor < length) {\n    const currentChar = text[cursor];\n    if (currentChar === '{') {\n      bracketCount += 1;\n    } else if (currentChar === '}') {\n      bracketCount -= 1;\n    }\n    cursor += 1;\n    substring += currentChar;\n  }\n  try {\n    return JSON.parse(substring);\n  } catch (e) {\n    return null;\n  }\n};\n\nconst getAllJsonFromString = (text: string): Array<Object> => {\n  const openBrackets = getAllOpenBrackets(text);\n  return openBrackets\n    .map(openBracketIndex =>\n      getStringUntilMatchingBracket(text, openBracketIndex)\n    )\n    .filter(Boolean);\n};\n\nconst isJsonLdObject = (obj: Object): Boolean => {\n  return '@context' in obj;\n};\n\nconst getAllJsonLdFromString = (text: string) => {\n  return getAllJsonFromString(text).filter(obj => isJsonLdObject(obj));\n};\n\nexport { getAllJsonLdFromString, isJsonLdObject, getAllJsonFromString };\n"],"names":["CheckResult","ok","type","details","error","CONTEXTS","isNode","process","versions","node","nodeDocumentLoader","jsonld","documentLoaders","xhr","defaultLoader","url","contextUrl","document","documentUrl","res","check","jsonldDocument","documentLoader","jsonldDoc","JSON","parse","unmappedProperties","expansionMap","info","activeProperty","push","unmappedProperty","expand","expanded","compact","length","stringify","name","message","fetch","require","githubApi","endpoint","then","json","getFiles","user","repo","ref","all","files","tree","filter","getAllOpenBrackets","text","results","cursor","getStringUntilMatchingBracket","openBracketIndex","substring","Error","bracketCount","currentChar","e","getAllJsonFromString","openBrackets","map","Boolean","isJsonLdObject","obj","getAllJsonLdFromString"],"mappings":";;IAAMA,cAQJ,qBAAYC,EAAZ,EAAyBC,IAAzB,EAAoCC,OAApC;MAAyBD;IAAAA,OAAO;;;MAAIC;IAAAA,UAAU;;;EAC5C,KAAKF,EAAL,GAAUA,EAAV;EACA,KAAKG,KAAL,GAAa;IACXF,IAAI,EAAJA,IADW;IAEXC,OAAO,EAAPA;GAFF;AAID;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZH,IAAME,QAAQ,GAAG,EAAjB;;AAGA,IAAMC,MAAM,GACV,OAAOC,OAAP,KAAmB,WAAnB,IACAA,OAAO,CAACC,QAAR,IAAoB,IADpB,IAEAD,OAAO,CAACC,QAAR,CAAiBC,IAAjB,IAAyB,IAH3B;AAKA,IAAMC,kBAAkB,GAAGJ,MAAM,gBAC5BK,MAAc,CAACC,eAAf,CAA+BH,IAA/B,EAD4B,gBAE5BE,MAAc,CAACC,eAAf,CAA+BC,GAA/B,EAFL;;AAKA,IAAMC,aAAa;EAAA,mFAAG,iBAAOC,GAAP;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA,MAChBA,GAAG,IAAIV,QADS;cAAA;cAAA;;;YAAA,iCAEX;cACLW,UAAU,EAAE,IADP;cAELC,QAAQ,EAAEZ,QAAQ,CAACU,GAAD,CAFb;cAGLG,WAAW,EAAEH;aALG;;UAAA;YAAA;YAAA,OAQFL,kBAAkB,CAACK,GAAD,CARhB;;UAAA;YAQdI,GARc;YASpBd,QAAQ,CAACU,GAAD,CAAR,GAAgBI,GAAG,CAACF,QAApB;YAToB,iCAUbE,GAVa;;UAAA;UAAA;YAAA;;;;GAAH;;EAAA,gBAAbL,aAAa;IAAA;;AAAA,GAAnB;;ACTA,IAAMM,KAAK;EAAA,mFAAG,iBACZC,cADY,EAEZC,cAFY;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA,IAEZA,cAFY;cAEZA,cAFY,GAEKR,aAFL;;;YAAA;;YAMV,IAAI,OAAOO,cAAP,KAA0B,QAA9B,EAAwC;cACtCE,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWJ,cAAX,CAAZ;aADF,MAEO;cACLE,SAAS,GAAGF,cAAZ;;;YAGIK,kBAZI,GAY2B,EAZ3B;;YAcJC,YAdI,GAcW,SAAfA,YAAe,CAAAC,IAAI;cACvB,IAAIA,IAAJ,EAAU;gBACR,IAAIA,IAAI,CAACC,cAAT,EAAyB;kBACvBH,kBAAkB,CAACI,IAAnB,CACKF,IAAI,CAACC,cADV,SAC4BD,IAAI,CAACG,gBADjC;iBADF,MAIO,IAAIH,IAAI,CAACG,gBAAT,EAA2B;kBAChCL,kBAAkB,CAACI,IAAnB,CAAwBF,IAAI,CAACG,gBAA7B;;;aArBI;;;YAAA;YAAA,OA2BapB,MAAM,CAACqB,MAAP,CAAcT,SAAd,EAAyB;cAC9CD,cAAc,EAAdA,cAD8C;cAE9CK,YAAY,EAAZA;aAFqB,CA3Bb;;UAAA;YA2BJM,QA3BI;YAAA;YAAA,OA+BJtB,MAAM,CAACuB,OAAP,CAAeD,QAAf,EAAyBV,SAAS,CAAC,UAAD,CAAlC,EAAgD;cAAED,cAAc,EAAdA;aAAlD,CA/BI;;UAAA;YAAA,MAiCNI,kBAAkB,CAACS,MAAnB,KAA8B,CAjCxB;cAAA;cAAA;;;YAAA,iCAkCD,IAAInC,WAAJ,CAAgB,IAAhB,CAlCC;;UAAA;YAAA,iCAoCH,IAAIA,WAAJ,CACL,KADK,EAEL,+BAFK,EAGLwB,IAAI,CAACY,SAAL,CAAeV,kBAAf,CAHK,CApCG;;UAAA;YAAA;YAAA;YAAA,iCA0CH,IAAI1B,WAAJ,CAAgB,KAAhB,EAAuB,YAAIqC,IAA3B,EAAiC,YAAIC,OAArC,CA1CG;;UAAA;UAAA;YAAA;;;;GAAH;;EAAA,gBAALlB,KAAK;IAAA;;AAAA,GAAX;;ACNA,IAAMmB,KAAK,gBAAGC,OAAO,CAAC,YAAD,CAArB;;AAEA,IAAMC,SAAS;EAAA,mFAAG,iBAAMC,QAAN;IAAA;MAAA;QAAA;UAAA;YAAA,iCACTH,KAAK,mCAAiCG,QAAjC,CAAL,CAAkDC,IAAlD,CAAuD,UAAAxB,GAAG;cAAA,OAC/DA,GAAG,CAACyB,IAAJ,EAD+D;aAA1D,CADS;;UAAA;UAAA;YAAA;;;;GAAH;;EAAA,gBAATH,SAAS;IAAA;;AAAA,GAAf;;AAMA,IAAMI,QAAQ;EAAA,oFAAG,kBAAOC,IAAP,EAAaC,IAAb,EAAmBC,GAAnB;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA,IAAmBA,GAAnB;cAAmBA,GAAnB,GAAyB,MAAzB;;;YAAA;YAAA,OACGP,SAAS,CAAIK,IAAJ,SAAYC,IAAZ,mBAA8BC,GAA9B,kBADZ;;UAAA;YACTC,GADS;YAETC,KAFS,GAEDD,GAAG,CAACE,IAAJ,CAASC,MAAT,CAAgB,UAAA3C,IAAI;cAAA,OAAIA,IAAI,CAACP,IAAL,KAAc,MAAlB;aAApB,CAFC;YAAA,kCAGRgD,KAHQ;;UAAA;UAAA;YAAA;;;;GAAH;;EAAA,gBAARL,QAAQ;IAAA;;AAAA,GAAd;;ACRA,IAAMQ,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,IAAD;EACzB,IAAMC,OAAO,GAAa,EAA1B;;EACA,KAAK,IAAIC,MAAM,GAAG,CAAlB,EAAqBA,MAAM,GAAGF,IAAI,CAACnB,MAAnC,EAA2CqB,MAAM,IAAI,CAArD,EAAwD;IACtD,IAAIF,IAAI,CAACE,MAAD,CAAJ,KAAiB,GAArB,EAA0B;MACxBD,OAAO,CAACzB,IAAR,CAAa0B,MAAb;;;;EAGJ,OAAOD,OAAP;AACD,CARD;;AAUA,IAAME,6BAA6B,GAAG,SAAhCA,6BAAgC,CACpCH,IADoC,EAEpCI,gBAFoC;EAIpC,IAAIC,SAAS,GAAGL,IAAI,CAACI,gBAAD,CAApB;;EACA,IAAIC,SAAS,KAAK,GAAlB,EAAuB;IACrB,MAAM,IAAIC,KAAJ,CAAU,+CAAV,CAAN;;;EAEF,IAAIC,YAAY,GAAG,CAAnB;EACA,IAAIL,MAAM,GAAGE,gBAAgB,GAAG,CAAhC;EACA,IAAQvB,MAAR,GAAmBmB,IAAnB,CAAQnB,MAAR;;EACA,OAAO0B,YAAY,KAAK,CAAjB,IAAsBL,MAAM,GAAGrB,MAAtC,EAA8C;IAC5C,IAAM2B,WAAW,GAAGR,IAAI,CAACE,MAAD,CAAxB;;IACA,IAAIM,WAAW,KAAK,GAApB,EAAyB;MACvBD,YAAY,IAAI,CAAhB;KADF,MAEO,IAAIC,WAAW,KAAK,GAApB,EAAyB;MAC9BD,YAAY,IAAI,CAAhB;;;IAEFL,MAAM,IAAI,CAAV;IACAG,SAAS,IAAIG,WAAb;;;EAEF,IAAI;IACF,OAAOtC,IAAI,CAACC,KAAL,CAAWkC,SAAX,CAAP;GADF,CAEE,OAAOI,CAAP,EAAU;IACV,OAAO,IAAP;;AAEH,CA1BD;;AA4BA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACV,IAAD;EAC3B,IAAMW,YAAY,GAAGZ,kBAAkB,CAACC,IAAD,CAAvC;EACA,OAAOW,YAAY,CAChBC,GADI,CACA,UAAAR,gBAAgB;IAAA,OACnBD,6BAA6B,CAACH,IAAD,EAAOI,gBAAP,CADV;GADhB,EAIJN,MAJI,CAIGe,OAJH,CAAP;AAKD,CAPD;;AASA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,GAAD;EACrB,OAAO,cAAcA,GAArB;AACD,CAFD;;AAIA,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAChB,IAAD;EAC7B,OAAOU,oBAAoB,CAACV,IAAD,CAApB,CAA2BF,MAA3B,CAAkC,UAAAiB,GAAG;IAAA,OAAID,cAAc,CAACC,GAAD,CAAlB;GAArC,CAAP;AACD,CAFD;;;;"}